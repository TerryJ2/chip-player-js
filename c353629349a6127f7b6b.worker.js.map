{"version":3,"sources":["../c353629349a6127f7b6b.worker.js","../webpack/bootstrap c353629349a6127f7b6b","SearchWorker.js","../node_modules/trie-search/index.js","../node_modules/trie-search/src/TrieSearch.js","../node_modules/hasharray/index.js","../node_modules/hasharray/src/HashArray.js","../node_modules/jclass/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","search","query","maxResults","Array","isArray","trim","split","filter","results","trie","__WEBPACK_IMPORTED_MODULE_0_trie_search___default","a","UNION_REDUCER","count","length","slice","postMessage","type","payload","value","__WEBPACK_IMPORTED_MODULE_0_trie_search__","indexField","idFieldOrFunction","splitOnRegEx","onmessage","message","data","start","performance","now","files","JSON","parse","map","file","id","addAll","time","toFixed","console","log","size","numRecords","deepLookup","obj","keys","HashArray","IS_WHITESPACE","DEFAULT_INTERNATIONALIZE_EXPAND_REGEXES","regex","alternate","String","replaceCharAt","index","replacement","this","substr","TrieSearch","keyFields","options","ignoreCase","undefined","maxCacheSize","cache","splitOnGetRegEx","min","keepAll","keepAllKey","expandRegexes","insertFullUnsplitKey","root","getCache","ignoreDuplicates","add","customKeys","clearCache","k","key","isKeyArr","val","toString","toLowerCase","expandedValues","expandString","v","expandedValue","values","match","er","exec","alternateValue","push","arr","reset","cleanCache","all","remove","addFromObject","valueField","indexOf","_key_","insert","keyArr","node","shift","self","test","phrases","emptySplitMatch","indexed","keyToArr","concat","findNode","f","_get","phrase","aggregate","ha","ret","haKeyFields","words","w","temp","intersection","reducer","accumulator","Error","matches","getId","item","maxLength","Math","max","JClass","_extend","init","callback","_map","_list","isHashArray","addOne","needsDupCheck","inst","objectAt","has","arguments","apply","addMap","other","clone","forEach","collides","complement","getAll","res","getAsArray","getUniqueRandomIntegers","r","floor","random","sample","image","rand","hasMultiple","removeByKey","removed","items","j","ix","key2","splice","removeAll","old","path","dup","forEachDeep","ignoreItems","sum","weightKey","average","tot","weightsTotal","callbackOrKey","defaultCallback","window","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","isFn","Function","extend","target","sources","source","defaultOptions","_isClassObject","initializing","BaseClass","_subClasses","instanceMembers","classMembers","_class","SuperClass","superPrototype","constructor","_superClass","_extends","getOwnPropertyDescriptor","member","descriptor","superMember","_super","ClassMembersSuperClass","_members","opts","ClassMembersClass","_instanceClass","_convert","cls","origin","_origin","_construct","args","Class","_superDescriptor","prop"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAA2B,MAAAhB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,mBAGAzB,IAAA0B,EAAA,KDMM,SAAUtB,EAAQuB,EAAqB3B,GAE7C,YEzCA,SAAS4B,GAAOC,EAAOC,GAChBC,MAAMC,QAAQH,KACjBA,EAAQA,EAAMI,OAAOC,MAAM,KAAKC,OAAO,SAAAhB,GAAA,MAAW,KAANA,IAC9C,IAAIiB,GAAUC,EAAKnB,IAAIW,EAAOS,EAAAC,EAAWC,mBACnCC,EAAQL,EAAQM,MAClBZ,KACFM,EAAUA,EAAQO,MAAM,EAAGb,IAE7Bc,aACEC,KAAM,UACNC,SACEV,QAASA,EACTK,MAAOA,KF8Bb3B,OAAOC,eAAeY,EAAqB,cAAgBoB,OAAO,GAC7C,IAAIC,GAA4ChD,EAAoB,GAChEsC,EAAoDtC,EAAoBmB,EAAE6B,GEtE7FX,EAAO,GAAIC,GAAAC,EAAW,QAC1BU,WAAY,KACZC,kBAAmB,KACnBC,aAAc,iBAGhBC,WAAY,SAACC,GACX,GAAMC,GAAOD,EAAQC,IACrB,QAAQA,EAAKT,MACX,IAAK,OACH,GAAMU,GAAQC,YAAYC,MACpBC,EAAQC,KAAKC,MAAMN,EAAKR,SAASe,IAAI,SAACC,EAAMzD,GAAP,OAAe0D,GAAI1D,EAAGyD,KAAMA,IACvEzB,GAAK2B,OAAON,EACZ,IAAMO,IAAQT,YAAYC,MAAQF,GAAOW,QAAQ,EACjDC,SAAQC,IAAI,sDAAuDV,EAAMhB,OAAQL,EAAKgC,KAAMJ,GAC5FrB,aACEC,KAAM,SACNC,SAAUwB,WAAYZ,EAAMhB,SAE9B,MACF,KAAK,SACHd,EAAO0B,EAAKR,QAAQjB,MAAOyB,EAAKR,QAAQhB,eFsDxC,SAAU1B,EAAQD,EAASH,GG7EjCI,EAAAD,QAAAH,EAAA,IHmFM,SAAUI,EAAQD,EAASH,GIrBjC,QAAAuE,GAAAC,EAAAC,GACA,WAAAA,EAAA/B,OAAA8B,EAAAC,EAAA,IAAAF,EAAAC,EAAAC,EAAA,IAAAA,EAAA9B,MAAA,EAAA8B,EAAA/B,SA/DA,GAAAgC,GAAA1E,EAAA,GAIA2E,EAAA,UAEAC,IAEAC,MAAA,mCACAC,UAAA,MAGAD,MAAA,uBACAC,UAAA,MAGAD,MAAA,uBACAC,UAAA,MAGAD,MAAA,2BACAC,UAAA,MAGAD,MAAA,uBACAC,UAAA,MAGAD,MAAA,WACAC,UAAA,MAIAC,QAAAxD,UAAAyD,cAAA,SAAAC,EAAAC,GACA,MAAAC,MAAAC,OAAA,EAAAH,GAAAC,EAAAC,KAAAC,OAAAH,EAAAC,EAAAxC,QAGA,IAAA2C,GAAA,SAAAC,EAAAC,GACAJ,KAAAI,cAGAJ,KAAAI,QAAAC,eAAAC,KAAAN,KAAAI,QAAAC,YAAAL,KAAAI,QAAAC,WACAL,KAAAI,QAAAG,aAAAP,KAAAI,QAAAG,cAxCA,GAyCAP,KAAAI,QAAAI,OAAAR,KAAAI,QAAA/D,eAAA,UAAA2D,KAAAI,QAAAI,MACAR,KAAAI,QAAApC,aAAAgC,KAAAI,QAAA/D,eAAA,gBAAA2D,KAAAI,QAAApC,aAAA,MACAgC,KAAAI,QAAAK,gBAAAT,KAAAI,QAAA/D,eAAA,mBAAA2D,KAAAI,QAAAK,gBAAAT,KAAAI,QAAApC,aACAgC,KAAAI,QAAAM,IAAAV,KAAAI,QAAAM,KAAA,EACAV,KAAAI,QAAAO,UAAAX,KAAAI,QAAA/D,eAAA,YAAA2D,KAAAI,QAAAO,QACAX,KAAAI,QAAAQ,WAAAZ,KAAAI,QAAA/D,eAAA,cAAA2D,KAAAI,QAAAQ,WAAA,KACAZ,KAAAI,QAAArC,kBAAAiC,KAAAI,QAAA/D,eAAA,qBAAA2D,KAAAI,QAAArC,sBAAAuC,GACAN,KAAAI,QAAAS,cAAAb,KAAAI,QAAAS,eAAApB,EACAO,KAAAI,QAAAU,uBAAAd,KAAAI,QAAA/D,eAAA,yBAAA2D,KAAAI,QAAAU,qBAEAd,KAAAG,wBAAAvD,OAAAuD,SACAH,KAAAe,QACAf,KAAAd,KAAA,EAEAc,KAAAI,QAAAI,QACAR,KAAAgB,SAAA,GAAAzB,GAAA,YAAgD0B,kBAAA,KAQhDf,GAAA9D,WACA8E,IAAA,SAAA7B,EAAA8B,GACAnB,KAAAI,QAAAI,OACAR,KAAAoB,aAGA,iBAAAD,KACAA,MAAAb,GAGA,IAAAH,GAAAgB,GAAAnB,KAAAG,SAEA,QAAAkB,KAAAlB,GACA,CACA,GAAAmB,GAAAnB,EAAAkB,GACAE,EAAAD,YAAA1E,OACA4E,EAAAD,EAAAnC,EAAAC,EAAAiC,GAAAjC,EAAAiC,EAEA,IAAAE,EAAA,CAEAA,IAAAC,WACAD,EAAAxB,KAAAI,QAAAC,WAAAmB,EAAAE,cAAAF,CAIA,QAFAG,GAAA3B,KAAA4B,aAAAJ,GAEAK,EAAA,EAAqBA,EAAAF,EAAApE,OAA2BsE,IAAA,CAChD,GAAAC,GAAAH,EAAAE,EAEA7B,MAAAtB,IAAAoD,EAAAzC,OAkBAuC,aAAA,SAAAhE,GACA,GAAAmE,IAAAnE,EAEA,IAAAoC,KAAAI,QAAAS,eAAAb,KAAAI,QAAAS,cAAAtD,OACA,OAAArC,GAAA,EAAqBA,EAAA8E,KAAAI,QAAAS,cAAAtD,OAAuCrC,IAI5D,IAHA,GACA8G,GADAC,EAAAjC,KAAAI,QAAAS,cAAA3F,GAGA,QAAA8G,EAAAC,EAAAvC,MAAAwC,KAAAtE,KAAA,CACA,GAAAuE,GAAAvE,EAAAiC,cAAAmC,EAAAlC,MAAAmC,EAAAtC,UACAoC,GAAAK,KAAAD,GAKA,MAAAJ,IAEAlD,OAAA,SAAAwD,EAAAlB,GACA,OAAAjG,GAAA,EAAmBA,EAAAmH,EAAA9E,OAAgBrC,IACnC8E,KAAAkB,IAAAmB,EAAAnH,GAAAiG,IAEAmB,MAAA,WACAtC,KAAAe,QACAf,KAAAd,KAAA,GAEAkC,WAAA,WAIApB,KAAAgB,SAAA,GAAAzB,GAAA,YAAgD0B,kBAAA,KAEhDsB,WAAA,WACA,KAAAvC,KAAAgB,SAAAwB,IAAAjF,OAAAyC,KAAAI,QAAAG,cACAP,KAAAgB,SAAAyB,OAAAzC,KAAAgB,SAAAwB,IAAA,KAEAE,cAAA,SAAArD,EAAAsD,GACA3C,KAAAI,QAAAI,OACAR,KAAAoB,aAEAuB,KAAA,SAEA,GAAA3C,KAAAG,UAAAyC,QAAA,UACA5C,KAAAG,UAAAiC,KAAA,QAEA,QAAAd,KAAAjC,GACA,CACA,GAAA3D,IAAemH,MAAAvB,EACf5F,GAAAiH,GAAAtD,EAAAiC,GACAtB,KAAAkB,IAAAxF,KAGAgD,IAAA,SAAA4C,EAAA1D,GAyCA,QAAAkF,GAAAC,EAAAnF,EAAAoF,GACA,MAAAD,EAAAxF,OAIA,MAFAyF,GAAA,MAAAA,EAAA,cACAA,GAAA,MAAAZ,KAAAxE,EAIA,IAAAyD,GAAA0B,EAAAE,OAEAD,GAAA3B,IACA6B,EAAAhE,OAEA8D,EAAA3B,GAAA2B,EAAA3B,OAEAyB,EAAAC,EAAAnF,EAAAoF,EAAA3B,IAvDA,GAAArB,KAAAI,QAAApC,cAAAgC,KAAAI,QAAApC,aAAAmF,KAAA7B,GACA,CACA,GAAA8B,GAAA9B,EAAAvE,MAAAiD,KAAAI,QAAApC,cACAqF,EAAAD,EAAApG,OAAA,SAAAV,GAAwD,MAAAkD,GAAA2D,KAAA7G,IAOxD,MANA8G,EAAApG,OAAA,SAAAV,GAAkD,MAAAA,KAAAgF,IAClD/D,OAAA8F,EAAA9F,SAAA6F,EAAA7F,QAKA,CACA,OAAArC,GAAA,EAAAC,EAAAiI,EAAA7F,OAA2CrC,EAAAC,EAAOD,IAClDsE,EAAA2D,KAAAC,EAAAlI,KACA8E,KAAAtB,IAAA0E,EAAAlI,GAAA0C,EAIA,KAAAoC,KAAAI,QAAAU,qBACA,QAKAd,KAAAI,QAAAI,OACAR,KAAAoB,aAEApB,KAAAI,QAAAO,UACAX,KAAAsD,QAAAtD,KAAAsD,SAAA,GAAA/D,IAAAS,KAAAI,QAAAQ,YAAA,MAAqFK,kBAAA,IACrFjB,KAAAsD,QAAApC,IAAAtD,IAGAoC,KAAAI,QAAAC,aACAiB,IAAAI,cAGA,IACAwB,GAAAlD,IAEA8C,GAHA9C,KAAAuD,SAAAjC,GAGA1D,EAAAoC,KAAAe,OAoBAwC,SAAA,SAAAjC,GACA,GAAAyB,EAEA,IAAA/C,KAAAI,QAAAM,KAAAV,KAAAI,QAAAM,IAAA,EACA,CACA,GAAAY,EAAA/D,OAAAyC,KAAAI,QAAAM,IACA,QAEAqC,IAAAzB,EAAArB,OAAA,EAAAD,KAAAI,QAAAM,MACAqC,IAAAS,OAAAlC,EAAArB,OAAAD,KAAAI,QAAAM,KAAA3D,MAAA,SAEAgG,GAAAzB,EAAAvE,MAAA,GAEA,OAAAgG,IAEAU,SAAA,SAAAnC,GAMA,QAAAoC,GAAAX,EAAAC,GACA,GAAAA,EAAA,CACA,MAAAD,EAAAxF,OAAA,MAAAyF,EAGA,OAAAU,GAAAX,EAAAC,EADAD,EAAAE,WATA,MAAAjD,MAAAI,QAAAM,IAAA,GAAAY,EAAA/D,OAAAyC,KAAAI,QAAAM,OAGAgD,EAAA1D,KAAAuD,SAAAjC,GAAAtB,KAAAe,OAUA4C,KAAA,SAAAC,GAkCA,QAAAC,GAAAb,EAAAc,GACAd,EAAApF,OAAAoF,EAAApF,MAAAL,QACAuG,EAAAjF,OAAAmE,EAAApF,MAEA,QAAAyD,KAAA2B,GACA,SAAA3B,GACAwC,EAAAb,EAAA3B,GAAAyC,GAvCAF,EAAA5D,KAAAI,QAAAC,WAAAuD,EAAAlC,cAAAkC,CAEA,IAAAtI,GAAA0H,CACA,IAAAhD,KAAAI,QAAAI,QAAAlF,EAAA0E,KAAAgB,SAAAjF,IAAA6H,IACA,MAAAtI,GAAAsC,KAMA,QAJAmG,OAAAzD,GACA0D,EAAAhE,KAAAI,QAAAtC,YAAAkC,KAAAI,QAAAtC,YAAAkC,KAAAG,UACA8D,EAAAjE,KAAAI,QAAAK,gBAAAmD,EAAA7G,MAAAiD,KAAAI,QAAAK,kBAAAmD,GAEAM,EAAA,EAAA/I,EAAA8I,EAAA1G,OAAqC2G,EAAA/I,EAAO+I,IAE5C,KAAAlE,KAAAI,QAAAM,KAAAuD,EAAAC,GAAA3G,OAAAyC,KAAAI,QAAAM,KAAA,CAGA,GAAAyD,GAAA,GAAA5E,GAAAyE,EAAA,MAAmD/C,kBAAA,KAEnD+B,EAAAhD,KAAAyD,SAAAQ,EAAAC,MACAL,EAAAb,EAAAmB,GAEAJ,MAAAK,aAAAD,KAGA,GAAAtC,GAAAkC,IAAAvB,MAQA,OANAxC,MAAAI,QAAAI,QAEAR,KAAAgB,SAAAE,KAAyBI,IAAAsC,EAAAhG,MAAAiE,IACzB7B,KAAAuC,cAGAV,GAWA9F,IAAA,SAAAqH,EAAAiB,GACA,GACAL,GAAAhE,KAAAI,QAAAtC,YAAAkC,KAAAI,QAAAtC,YAAAkC,KAAAG,UACA4D,MAAAzD,GACAgE,MAAAhE,EAEA,IAAA+D,IAAArE,KAAAI,QAAArC,kBACA,SAAAwG,OAAA,iEAGAnB,eAAAxG,OAAAwG,KAEA,QAAAlI,GAAA,EAAAC,EAAAiI,EAAA7F,OAAuCrC,EAAAC,EAAOD,IAC9C,CACA,GAAAsJ,GAAAxE,KAAA2D,KAAAP,EAAAlI,GAEAmJ,GACAC,EAAAD,EAAAC,EAAAlB,EAAAlI,GAAAsJ,EAAAxE,MAEA+D,MAAAlF,OAAA2F,GAAA,GAAAjF,GAAAyE,EAAA,MAA4E/C,kBAAA,IAAuBpC,OAAA2F,GAInG,MAAAH,GAIAC,EAHAP,EAAAvB,KAKAiC,MAAA,SAAAC,GACA,yBAAA1E,MAAAI,QAAArC,kBAAAiC,KAAAI,QAAArC,kBAAA2G,KAAA1E,KAAAI,QAAArC,qBAIAmC,EAAA7C,cAAA,SAAAiH,EAAAV,EAAAY,EAAAtH,GACA,OAAAoD,KAAAgE,EACA,MAAAE,EAGA,IAActJ,GAAA0D,EAAdF,KACAiG,EAAAC,KAAAC,IAAAP,EAAA/G,OAAAiH,EAAAjH,QACAN,KACA9B,EAAA,CAGA,KAAAD,EAAA,EAAaA,EAAAyJ,EAAezJ,IAC5BA,EAAAoJ,EAAA/G,SACAqB,EAAA1B,EAAAuH,MAAAH,EAAApJ,IACAwD,EAAAE,GAAAF,EAAAE,GAAAF,EAAAE,GAAA,EAGA,MAFAF,EAAAE,KAGA3B,EAAA9B,KAAAmJ,EAAApJ,KAIAA,EAAAsJ,EAAAjH,SACAqB,EAAA1B,EAAAuH,MAAAD,EAAAtJ,IACAwD,EAAAE,GAAAF,EAAAE,GAAAF,EAAAE,GAAA,EAGA,MAFAF,EAAAE,KAGA3B,EAAA9B,KAAAqJ,EAAAtJ,IAKA,OAAA+B,IAGAhC,EAAAD,QAAAkF,GJ0FM,SAAUjF,EAAQD,EAASH,GKtcjCI,EAAAD,QAAAH,EAAA,IL4cM,SAAUI,EAAQD,EAASH,GMzcjC,GAAAiK,GAAAjK,EAAA,GAKA0E,EAAAuF,EAAAC,SAIAC,KAAA,SAAA7E,EAAA8E,EAAA7E,GACAD,cAAAvD,OAAAuD,MAEAH,KAAAkF,QACAlF,KAAAmF,SACAnF,KAAAiF,WAEAjF,KAAAG,YAEAH,KAAAoF,aAAA,EAEApF,KAAAI,YACAa,kBAAA,GAGAgE,GACAA,EAAA,cAMAI,OAAA,SAAAhG,GACA,GAAAiG,IAAA,CACA,QAAAhE,KAAAtB,MAAAG,UAAA,CACAmB,EAAAtB,KAAAG,UAAAmB,EACA,IAAAiE,GAAAvF,KAAAwF,SAAAnG,EAAAiC,EACA,IAAAiE,EACA,GAAAvF,KAAAyF,IAAAF,GAAA,CACA,GAAAvF,KAAAI,QAAAa,iBACA,MACA,QAAAjB,KAAAkF,KAAAK,GAAA3C,QAAAvD,GAAA,CAEAiG,GAAA,CACA,UAEAtF,KAAAkF,KAAAK,GAAAnD,KAAA/C,OAEAW,MAAAkF,KAAAK,IAAAlG,GAIAiG,IAAA,GAAAtF,KAAAmF,MAAAvC,QAAAvD,IACAW,KAAAmF,MAAA/C,KAAA/C,IAEA6B,IAAA,WACA,OAAAhG,GAAA,EAAmBA,EAAAwK,UAAAnI,OAAsBrC,IACzC8E,KAAAqF,OAAAK,UAAAxK,GAOA,OAJA8E,MAAAiF,UACAjF,KAAAiF,SAAA,MAAArI,MAAAR,UAAAoB,MAAApC,KAAAsK,UAAA,IAGA1F,MAEAnB,OAAA,SAAAwD,GACA,GAAAA,EAAA9E,OAAA,IACAyC,KAAAkB,IAAAyE,MAAA3F,KAAAqC,OAEA,QAAAnH,GAAA,EAAqBA,EAAAmH,EAAA9E,OAAgBrC,IACrC8E,KAAAkB,IAAAmB,EAAAnH,GAGA,OAAA8E,OAEA4F,OAAA,SAAAtE,EAAAjC,GASA,MARAW,MAAAkF,KAAA5D,GAAAjC,EACAW,KAAAiF,UACAjF,KAAAiF,SAAA,UACA3D,MACAjC,QAIAW,MAQAoE,aAAA,SAAAyB,GACA,GAAA3C,GAAAlD,IAEA,KAAA6F,MAAAT,YACA,KAAAb,OAAA,6EAAAsB,EAEA,IAAA9B,GAAA/D,KAAA8F,MAAA,QAQA,OAPA9F,MAAA8F,MAAA,SAAAjH,OAAAmB,KAAAwC,IAAAgB,OAAAqC,EAAArD,MAEAA,IAAAuD,QAAA,SAAArB,GACAxB,EAAA8C,SAAAtB,IAAAmB,EAAAG,SAAAtB,IACAX,EAAA7C,IAAAwD,KAGAX,GAKAkC,WAAA,SAAAJ,GAGA,IAAAA,MAAAT,YACA,KAAAb,OAAA,2EAAAsB,EAEA,IAAA9B,GAAA/D,KAAA8F,MAAA,QAOA,OALA9F,MAAAwC,IAAAuD,QAAA,SAAArB,GACAmB,EAAAG,SAAAtB,IACAX,EAAA7C,IAAAwD,KAGAX,GAKAhI,IAAA,SAAAuF,GACA,MAAAtB,MAAAkF,KAAA5D,YAAA1E,QAAA,GAAAoD,KAAAkF,KAAA5D,GAAA/D,OAAAyC,KAAAkF,KAAA5D,GAAA,GAAAtB,KAAAkF,KAAA5D,IAEA4E,OAAA,SAAA5G,GAGA,GAFAA,cAAA1C,OAAA0C,MAEA,KAAAA,EAAA,GACA,MAAAU,MAAAwC,GAEA,IAAA2D,GAAA,GAAA5G,GAAAS,KAAAG,UACA,QAAAmB,KAAAhC,GACA6G,EAAAjF,IAAAyE,MAAAQ,EAAAnG,KAAAoG,WAAA9G,EAAAgC,IAEA,OAAA6E,GAAA3D,KAEA4D,WAAA,SAAA9E,GACA,MAAAtB,MAAAkF,KAAA5D,QAEA+E,wBAAA,SAAA/I,EAAAoD,EAAAmE,GACA,GAAAsB,MAAAzH,IAIA,KAFApB,EAAAsH,KAAAlE,IAAAkE,KAAAC,MAAAnE,EAAA,GAAApD,GAEA6I,EAAA5I,OAAAD,GACA,CACA,GAAAgJ,GAAA1B,KAAA2B,MAAA7F,EAAAkE,KAAA4B,UAAA3B,EAAA,GACAnG,GAAA4H,KACA5H,EAAA4H,IAAA,EACAH,EAAA/D,KAAAkE,IAGA,MAAAH,IAEAM,OAAA,SAAAnJ,EAAAgC,GAEA,GAAAoH,GAAA1G,KAAAwC,IAEA2D,IAEA7G,KACAoH,EAAA1G,KAAAkG,OAAA5G,GAIA,QAFAqH,GAAA3G,KAAAqG,wBAAA/I,EAAA,EAAAoJ,EAAAnJ,OAAA,GAEArC,EAAA,EAAmBA,EAAAyL,EAAApJ,OAAiBrC,IACpCiL,EAAA/D,KAAAsE,EAAAC,EAAAzL,IAEA,OAAAiL,IAKAV,IAAA,SAAAnE,GACA,MAAAtB,MAAAkF,KAAA7I,eAAAiF,IAEA0E,SAAA,SAAAtB,GACA,OAAArD,KAAArB,MAAAG,UACA,GAAAH,KAAAyF,IAAAzF,KAAAwF,SAAAd,EAAA1E,KAAAG,UAAAkB,KACA,QAEA,WAEAuF,YAAA,SAAAtF,GACA,MAAAtB,MAAAkF,KAAA5D,YAAA1E,QAKAiK,YAAA,WAEA,OADAC,MACA5L,EAAA,EAAmBA,EAAAwK,UAAAnI,OAAsBrC,IAAA,CACzC,GAAAoG,GAAAoE,UAAAxK,GACA6L,EAAA/G,KAAAkF,KAAA5D,GAAAkC,QACA,IAAAuD,EAAA,CACAD,IAAAtD,OAAAuD,EACA,QAAAC,KAAAD,GAAA,CACA,GAAArC,GAAAqC,EAAAC,EACA,QAAAC,KAAAjH,MAAAG,UAAA,CACA,GAAA+G,GAAAlH,KAAAwF,SAAAd,EAAA1E,KAAAG,UAAA8G,GACA,IAAAC,GAAAlH,KAAAyF,IAAAyB,GAAA,CACA,GAAAD,GAAAjH,KAAAkF,KAAAgC,GAAAtE,QAAA8B,IACA,GAAAuC,GACAjH,KAAAkF,KAAAgC,GAAAC,OAAAF,EAAA,GAGA,GAAAjH,KAAAkF,KAAAgC,GAAA3J,cACAyC,MAAAkF,KAAAgC,IAIAlH,KAAAmF,MAAAgC,OAAAnH,KAAAmF,MAAAvC,QAAA8B,GAAA,UAGA1E,MAAAkF,KAAA5D,GAOA,MAJAtB,MAAAiF,UACAjF,KAAAiF,SAAA,cAAA6B,GAGA9G,MAEAyC,OAAA,WACA,OAAAvH,GAAA,EAAmBA,EAAAwK,UAAAnI,OAAsBrC,IAAA,CACzC,GAAAwJ,GAAAgB,UAAAxK,EACA,QAAA+L,KAAAjH,MAAAG,UAAA,CACA,GAAAmB,GAAAtB,KAAAwF,SAAAd,EAAA1E,KAAAG,UAAA8G,GACA,IAAA3F,EAAA,CACA,GAAA2F,GAAAjH,KAAAkF,KAAA5D,GAAAsB,QAAA8B,EACA,QAAAuC,EAGA,SAAA1C,OAAA,kEAAAjD,EAFAtB,MAAAkF,KAAA5D,GAAA6F,OAAAF,EAAA,GAIA,GAAAjH,KAAAkF,KAAA5D,GAAA/D,cACAyC,MAAAkF,KAAA5D,IAIA,GAAA2F,GAAAjH,KAAAmF,MAAAvC,QAAA8B,EAEA,QAAAuC,EAGA,SAAA1C,OAAA,kEAAAjD,EAFAtB,MAAAmF,MAAAgC,OAAAF,EAAA,GASA,MAJAjH,MAAAiF,UACAjF,KAAAiF,SAAA,SAAAS,WAGA1F,MAEAoH,UAAA,WACA,GAAAC,GAAArH,KAAAmF,MAAA3B,QAQA,OAPAxD,MAAAkF,QACAlF,KAAAmF,SAEAnF,KAAAiF,UACAjF,KAAAiF,SAAA,SAAAoC,GAGArH,MAKAwF,SAAA,SAAAnG,EAAAiI,GACA,oBAAAA,GACA,MAAAjI,GAAAiI,EAKA,KAFA,GAAAC,GAAAD,EAAA9D,SAEA+D,EAAAhK,QAAA8B,GACAA,IAAAkI,EAAAtE,QAGA,OAAA5D,IAKA0G,QAAA,SAAAzG,EAAA2F,GAOA,MANA3F,eAAA1C,OAAA0C,MAEAU,KAAAkG,OAAA5G,GAEAyG,QAAAd,GAEAjF,MAEAwH,YAAA,SAAAlI,EAAAgC,EAAA2D,GACA3F,cAAA1C,OAAA0C,KAEA,IAAA4D,GAAAlD,IAOA,OANAA,MAAAkG,OAAA5G,GAEAyG,QAAA,SAAArB,GACAO,EAAA/B,EAAAsC,SAAAd,EAAApD,GAAAoD,KAGA1E,MAKA8F,MAAA,SAAAb,EAAAwC,GACA,GAAAzL,GAAA,GAAAuD,GAAAS,KAAAG,UAAAqD,SAAAyB,GAAAjF,KAAAiF,SAGA,OAFAwC,IACAzL,EAAAkF,IAAAyE,MAAA3J,EAAAgE,KAAAwC,IAAAgB,UACAxH,GAKA0L,IAAA,SAAApI,EAAAgC,EAAAqG,GACA,GAAAzE,GAAAlD,KACA+D,EAAA,CAOA,OANA/D,MAAAwH,YAAAlI,EAAAgC,EAAA,SAAA1D,EAAA8G,OACApE,KAAAqH,IACA/J,GAAAsF,EAAAsC,SAAAd,EAAAiD,IAEA5D,GAAAnG,IAEAmG,GAEA6D,QAAA,SAAAtI,EAAAgC,EAAAqG,GACA,GAAA5D,GAAA,EACA8D,EAAA,EACAC,EAAA,EACA5E,EAAAlD,IAeA,YAbAM,KAAAqH,GACA3H,KAAAwH,YAAAlI,EAAAqI,EAAA,SAAA/J,GACAkK,GAAAlK,IAGAoC,KAAAwH,YAAAlI,EAAAgC,EAAA,SAAA1D,EAAA8G,OACApE,KAAAqH,IACA/J,GAAAsF,EAAAsC,SAAAd,EAAAiD,GAAAG,GAEA/D,GAAAnG,EACAiK,UAGAvH,KAAAqH,EAAA5D,IAAA8D,GAKA7K,OAAA,SAAAsC,EAAAyI,GASA,QAAAC,GAAAtD,GACA,GAAAlD,GAAA0B,EAAAsC,SAAAd,EAAAqD,EACA,YAAAzH,KAAAkB,IAAA,IAAAA,EAVA,GAAA0B,GAAAlD,KAEAiF,EAAA,qBAAA8C,EAAAC,EAEAlE,EAAA,GAAAvE,GAAAS,KAAAG,UAEA,OADA2D,GAAAjF,OAAAmB,KAAAkG,OAAA5G,GAAAtC,OAAAiI,IACAnB,IAYAnI,QAAAC,eAAA2D,EAAAnD,UAAA,OACAL,IAAA,WACA,MAAAiE,MAAAmF,SAIAxJ,OAAAC,eAAA2D,EAAAnD,UAAA,OACAL,IAAA,WACA,MAAAiE,MAAAkF,QAIAjK,EAAAD,QAAAuE,EAKA,oBAAA0I,UACAA,OAAA1I,cNkdM,SAAUtE,EAAQD,EAASH,GOl2BjC,GAAAqN,GAAAC,EAAAC,GAQA,SAAAC,GAQAF,KAAAD,EAAA,MAAA5H,MAAA8H,EAAA,mBAAAF,KAAAvC,MAAA3K,EAAAmN,GAAAD,KAAAjN,EAAAD,QAAAoN,IAoBC,WAYD,GAAAE,GAAA,SAAAjJ,GACA,MAAAA,aAAAkJ,WAWAC,EAAA,SAAAC,GACA,GAAAC,GAAA9L,MAAAR,UAAAoB,MAAApC,KAAAsK,UAAA,EAGA,QAAAxK,KAAAwN,GAAA,CACA,GAAAC,GAAAD,EAAAxN,EAGA,uBAKA,OAAAoG,KAAAqH,GACAF,EAAAnH,GAAAqH,EAAArH,GAIA,MAAAmH,IAQAG,GAGAC,gBAAA,GASAC,GAAA,EAQAC,EAAA,YAgPA,OA7OAA,GAAAC,eAGAD,EAAA3M,UAAA4I,KAAA,aAUA+D,EAAAhE,QAAA,SAAAkE,EAAAC,EAAA9I,OAGAE,KAAA2I,IACAA,UAEA3I,KAAA4I,IACAA,UAEA5I,KAAAF,IACAA,MAIAA,EAAAoI,KAAuBI,EAAAxI,EAIvB,IAAA0E,GAAA,WAEAgE,IAKA9I,KAAAmJ,OAAArE,EAGA9E,KAAAgF,eAAAuD,WACAvI,KAAAgF,KAAAW,MAAA3F,KAAA0F,aAMA0D,EAAApJ,IAIA8I,IAAA,CACA,IAAA1M,GAAA,GAAAgN,EACAN,IAAA,CAGA,IAAAO,GAAAD,EAAAhN,SAGA0I,GAAA1I,YAIA0I,EAAA1I,UAAAkN,YAAAxE,EAGAA,EAAAyE,YAAAH,EAGAtE,EAAAkE,eACAI,EAAAJ,YAAA5G,KAAA0C,GAGAA,EAAAC,QAAAqE,EAAArE,QAKAD,EAAA0E,SAAA,SAAAf,GAEA,MAAAzI,MAAAuJ,aAAAR,IAKAN,GAAAzI,KAAAuJ,aAAAd,GAAAM,GAKA/I,KAAAuJ,YAAAC,SAAAf,IAMA,QAAAnH,KAAA2H,GAAA,CACA,GAAA9M,GAAAR,OAAA8N,yBAAAR,EAAA3H,GACAoI,EAAAvN,EAAAyB,KAGA,WAAA8L,GAAA,oBAAAA,EAAAC,WACAhO,OAAAC,eAAAQ,EAAAkF,EAAAoI,OAGO,aAAAvN,MAAA,OAAAA,IAAA,OAAAA,IAIA,CACPC,EAAAkF,GAAAoI,CAIA,IAAAE,GAAAP,EAAA/H,EACAgH,GAAAoB,IAAApB,EAAAsB,IAAAF,IAAAE,IACAF,EAAAG,OAAAD,OAVAjO,QAAAC,eAAAQ,EAAAkF,EAAAnF,GAiBA,IAAAiE,EAAAyI,eAAA,CAEA,GAAAiB,OAAAxJ,KAAA8I,EAAAW,SACAhB,EAAAK,EAAAW,SAAAZ,OAIAa,EAAAxB,KAA0BpI,GAAYyI,gBAAA,IACtCoB,EAAAH,EAAA/E,QAAAmE,KAA6Ec,EAG7EC,GAAAC,eAAApF,EAGAA,EAAAiF,SAAA,GAAAE,GAKA,MAAAnF,IAUAiE,EAAAoB,SAAA,SAAAC,EAAAhK,GAEA,GAAA6I,GAAAmB,EAAAhO,SAsBA,OAnBA6M,GAAAjE,KAAA,WAEA,GAAAqF,GAAArK,KAAAsK,QAAAvB,EAAAwB,WAAAH,EAAA1E,UAGA/J,QAAA2D,KAAA+K,GAAAtE,QAAA,SAAAzE,GACA+I,EAAAhO,eAAAiF,IAIA3F,OAAAC,eAAAoE,KAAAsB,GACAvF,IAAA,WACA,MAAAsO,GAAA/I,OAGOtB,OAIP+I,EAAAhE,QAAAkE,KAAgD7I,IAchD2I,EAAAwB,WAAA,SAAAH,EAAAI,OAEAlK,KAAAkK,IACAA,KAIA,IAAAC,GAAA,WACA,MAAAL,GAAAzE,MAAA3F,KAAAwK,GAOA,OAHAC,GAAArO,UAAAgO,EAAAhO,UAGA,GAAAqO,IAYA1B,EAAA2B,iBAAA,SAAAN,EAAAO,GAOA,MALA,UAAAP,mBAAAjB,SACAiB,IAAAjB,QAIA,YAAAiB,MAAAZ,mBAAAjB,WAAA6B,EAAAZ,SAAAxJ,MACArE,OAAA8N,yBAAAW,EAAAb,YAAAnN,UAAAuO,OAEA,IASA5B","file":"c353629349a6127f7b6b.worker.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/chip-player-js/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_trie_search__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_trie_search___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_trie_search__);\nvar trie=new __WEBPACK_IMPORTED_MODULE_0_trie_search___default.a('file',{indexField:'id',idFieldOrFunction:'id',splitOnRegEx:/[^A-Za-z0-9]/g});onmessage=function onmessage(message){var data=message.data;switch(data.type){case'load':var start=performance.now();var files=JSON.parse(data.payload).map(function(file,i){return{id:i,file:file};});trie.addAll(files);var time=(performance.now()-start).toFixed(1);console.log('Added %s items (%s tokens) to search trie in %s ms.',files.length,trie.size,time);postMessage({type:'status',payload:{numRecords:files.length}});break;case'search':search(data.payload.query,data.payload.maxResults);break;}};function search(query,maxResults){if(!Array.isArray(query))query=query.trim().split(' ').filter(function(n){return n!=='';});var results=trie.get(query,__WEBPACK_IMPORTED_MODULE_0_trie_search___default.a.UNION_REDUCER)||[];var count=results.length;if(maxResults){results=results.slice(0,maxResults);}postMessage({type:'results',payload:{results:results,count:count}});}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(2);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar HashArray = __webpack_require__(3);\n\nvar MAX_CACHE_SIZE = 64;\n\nvar IS_WHITESPACE = /^[\\s]*$/;\n\nvar DEFAULT_INTERNATIONALIZE_EXPAND_REGEXES = [\n  {\n    regex: /[åäàáâãæ]/ig,\n    alternate: 'a'\n  },\n  {\n    regex: /[èéêë]/ig,\n    alternate: 'e'\n  },\n  {\n    regex: /[ìíîï]/ig,\n    alternate: 'i'\n  },\n  {\n    regex: /[òóôõö]/ig,\n    alternate: 'o'\n  },\n  {\n    regex: /[ùúûü]/ig,\n    alternate: 'u'\n  },\n  {\n    regex: /[æ]/ig,\n    alternate: 'ae'\n  }\n];\n\nString.prototype.replaceCharAt=function(index, replacement) {\n  return this.substr(0, index) + replacement + this.substr(index + replacement.length);\n};\n\nvar TrieSearch = function (keyFields, options) {\n  this.options = options || {};\n\n  // Default ignoreCase to true\n  this.options.ignoreCase = (this.options.ignoreCase === undefined) ? true : this.options.ignoreCase;\n  this.options.maxCacheSize = this.options.maxCacheSize || MAX_CACHE_SIZE;\n  this.options.cache = this.options.hasOwnProperty('cache') ? this.options.cache : true;\n  this.options.splitOnRegEx = this.options.hasOwnProperty('splitOnRegEx') ? this.options.splitOnRegEx : /\\s/g;\n  this.options.splitOnGetRegEx = this.options.hasOwnProperty('splitOnGetRegEx') ? this.options.splitOnGetRegEx : this.options.splitOnRegEx;\n  this.options.min = this.options.min || 1;\n  this.options.keepAll = this.options.hasOwnProperty('keepAll') ? this.options.keepAll : false;\n  this.options.keepAllKey = this.options.hasOwnProperty('keepAllKey') ? this.options.keepAllKey : 'id';\n  this.options.idFieldOrFunction = this.options.hasOwnProperty('idFieldOrFunction') ? this.options.idFieldOrFunction : undefined;\n  this.options.expandRegexes = this.options.expandRegexes || DEFAULT_INTERNATIONALIZE_EXPAND_REGEXES;\n  this.options.insertFullUnsplitKey = this.options.hasOwnProperty('insertFullUnsplitKey') ? this.options.insertFullUnsplitKey : false;\n\n  this.keyFields = keyFields ? (keyFields instanceof Array ? keyFields : [keyFields]) : [];\n  this.root = {};\n  this.size = 0;\n\n  if (this.options.cache) {\n    this.getCache = new HashArray('key', null, {ignoreDuplicates: true});\n  }\n};\n\nfunction deepLookup(obj, keys) {\n  return keys.length === 1 ? obj[keys[0]] : deepLookup(obj[keys[0]], keys.slice(1, keys.length));\n}\n\nTrieSearch.prototype = {\n  add: function (obj, customKeys) {\n    if (this.options.cache)\n      this.clearCache();\n\n    // Someone might have called add via an array forEach where the second param is a number\n    if (typeof customKeys === 'number') {\n      customKeys = undefined;\n    }\n\n    var keyFields = customKeys || this.keyFields;\n\n    for (var k in keyFields)\n    {\n      var key = keyFields[k],\n        isKeyArr = key instanceof Array,\n        val = isKeyArr ? deepLookup(obj, key) : obj[key];\n\n      if (!val) continue;\n\n      val = val.toString();\n      val = this.options.ignoreCase ? val.toLowerCase() : val;\n\n      var expandedValues = this.expandString(val);\n\n      for (var v = 0; v < expandedValues.length; v++) {\n        var expandedValue = expandedValues[v];\n\n        this.map(expandedValue, obj);\n      }\n    }\n  },\n  /**\n   * By default using the options.expandRegexes, given a string like 'ö är bra', this will expand it to:\n   *\n   * ['ö är bra', 'o är bra', 'ö ar bra', 'o ar bra']\n   *\n   * By default this was built to allow for internationalization, but it could be also be expanded to\n   * allow for word alternates, etc. like spelling alternates ('teh' and 'the').\n   *\n   * This is used for insertion! This should not be used for lookup since if a person explicitly types\n   * 'ä' they probably do not want to see all results for 'a'.\n   *\n   * @param value The string to find alternates for.\n   * @returns {Array} Always returns an array even if no matches.\n   */\n  expandString: function(value) {\n    var values = [value];\n\n    if (this.options.expandRegexes && this.options.expandRegexes.length) {\n      for (var i = 0; i < this.options.expandRegexes.length; i++) {\n        var er = this.options.expandRegexes[i];\n        var match;\n\n        while((match = er.regex.exec(value)) !== null) {\n          var alternateValue = value.replaceCharAt(match.index, er.alternate);\n          values.push(alternateValue);\n        }\n      }\n    }\n\n    return values;\n  },\n  addAll: function (arr, customKeys) {\n    for (var i = 0; i < arr.length; i++)\n      this.add(arr[i], customKeys);\n  },\n  reset: function () {\n    this.root = {};\n    this.size = 0;\n  },\n  clearCache: function () {\n    // if (this.getCache && !this.getCache._list.length) {\n    //   return;\n    // }\n    this.getCache = new HashArray('key', null, {ignoreDuplicates: true});\n  },\n  cleanCache: function () {\n    while (this.getCache.all.length > this.options.maxCacheSize)\n      this.getCache.remove(this.getCache.all[0]);\n  },\n  addFromObject: function (obj, valueField) {\n    if (this.options.cache)\n      this.clearCache();\n\n    valueField = valueField || 'value';\n\n    if (this.keyFields.indexOf('_key_') == -1)\n      this.keyFields.push('_key_');\n\n    for (var key in obj)\n    {\n      var o = {_key_: key};\n      o[valueField] = obj[key];\n      this.add(o);\n    }\n  },\n  map: function (key, value) {\n    if (this.options.splitOnRegEx && this.options.splitOnRegEx.test(key))\n    {\n      var phrases = key.split(this.options.splitOnRegEx);\n      var emptySplitMatch = phrases.filter(function(p) { return IS_WHITESPACE.test(p); });\n      var selfMatch = phrases.filter(function(p) { return p === key; });\n      var selfIsOnlyMatch = selfMatch.length + emptySplitMatch.length === phrases.length;\n\n      // There is an edge case that a RegEx with a positive lookeahed like:\n      //  /?=[A-Z]/ // Split on capital letters for a camelcase sentence\n      // Will then match again when we call map, creating an infinite stack loop.\n      if (!selfIsOnlyMatch) {\n        for (var i = 0, l = phrases.length; i < l; i++) {\n          if (!IS_WHITESPACE.test(phrases[i])) {\n            this.map(phrases[i], value);\n          }\n        }\n\n        if (!this.options.insertFullUnsplitKey) {\n          return;\n        }\n      }\n    }\n\n    if (this.options.cache)\n      this.clearCache();\n\n    if (this.options.keepAll) {\n      this.indexed = this.indexed || new HashArray([this.options.keepAllKey], null, {ignoreDuplicates: true});\n      this.indexed.add(value);\n    }\n\n    if (this.options.ignoreCase) {\n      key = key.toLowerCase();\n    }\n\n    var keyArr = this.keyToArr(key),\n      self = this;\n\n    insert(keyArr, value, this.root);\n\n    function insert(keyArr, value, node) {\n      if (keyArr.length == 0)\n      {\n        node['value'] = node['value'] || [];\n        node['value'].push(value);\n        return; \n      }\n\n      var k = keyArr.shift();\n\n      if (!node[k])\n        self.size++;\n\n      node[k] = node[k] || {};\n\n      insert(keyArr, value, node[k])\n    }\n  },\n  keyToArr: function (key) {\n    var keyArr;\n      \n    if (this.options.min && this.options.min > 1)\n    {\n      if (key.length < this.options.min)\n        return [];\n\n      keyArr = [key.substr(0, this.options.min)];\n      keyArr = keyArr.concat(key.substr(this.options.min).split(''));\n    }\n    else keyArr = key.split('');\n\n    return keyArr;\n  },\n  findNode: function (key) {\n    if (this.options.min > 0 && key.length < this.options.min)\n      return [];\n\n    return f(this.keyToArr(key), this.root);\n\n    function f(keyArr, node) {\n      if (!node) return undefined;\n      if (keyArr.length == 0) return node;\n\n      var k = keyArr.shift();\n      return f(keyArr, node[k]);\n    }\n  },\n  _get: function (phrase) {\n    phrase = this.options.ignoreCase ? phrase.toLowerCase() : phrase;\n    \n    var c, node;\n    if (this.options.cache && (c = this.getCache.get(phrase)))\n      return c.value;\n\n    var ret = undefined,\n      haKeyFields = this.options.indexField ? [this.options.indexField] : this.keyFields,\n      words = this.options.splitOnGetRegEx ? phrase.split(this.options.splitOnGetRegEx) : [phrase];\n\n    for (var w = 0, l = words.length; w < l; w++)\n    {\n      if (this.options.min && words[w].length < this.options.min)\n        continue;\n\n      var temp = new HashArray(haKeyFields, null, {ignoreDuplicates: true});\n\n      if (node = this.findNode(words[w]))\n        aggregate(node, temp);\n\n      ret = ret ? ret.intersection(temp) : temp;\n    }\n    \n    var v = ret ? ret.all : [];\n\n    if (this.options.cache)\n    {\n      this.getCache.add({key: phrase, value: v});\n      this.cleanCache();\n    }\n\n    return v;\n    \n    function aggregate(node, ha) {\n      if (node.value && node.value.length)\n        ha.addAll(node.value);\n\n      for (var k in node)\n        if (k != 'value')\n          aggregate(node[k], ha);\n    }\n  },\n  get: function (phrases, reducer) {\n    var self = this,\n      haKeyFields = this.options.indexField ? [this.options.indexField] : this.keyFields,\n      ret = undefined,\n      accumulator = undefined;\n\n    if (reducer && !this.options.idFieldOrFunction) {\n      throw new Error('To use the accumulator, you must specify and idFieldOrFunction');\n    }\n\n    phrases = (phrases instanceof Array) ? phrases : [phrases];\n\n    for (var i = 0, l = phrases.length; i < l; i++)\n    {\n      var matches = this._get(phrases[i]);\n\n      if (reducer) {\n        accumulator = reducer(accumulator, phrases[i], matches, this);\n      } else {\n        ret = ret ? ret.addAll(matches) : new HashArray(haKeyFields, null, {ignoreDuplicates: true}).addAll(matches);\n      }\n    }\n\n    if (!reducer) {\n      return ret.all;\n    }\n\n    return accumulator;\n  },\n  getId: function (item) {\n    return typeof this.options.idFieldOrFunction === 'function' ? this.options.idFieldOrFunction(item) : item[this.options.idFieldOrFunction];\n  }\n};\n\nTrieSearch.UNION_REDUCER = function(accumulator, phrase, matches, trie) {\n  if (accumulator === undefined) {\n    return matches;\n  }\n\n  var map = {}, i, id;\n  var maxLength = Math.max(accumulator.length, matches.length);\n  var results = [];\n  var l = 0;\n\n  // One loop, O(N) for max length of accumulator or matches.\n  for (i = 0; i < maxLength; i++) {\n    if (i < accumulator.length) {\n      id = trie.getId(accumulator[i]);\n      map[id] = map[id] ? map[id] : 0;\n      map[id]++;\n\n      if (map[id] === 2) {\n        results[l++] = accumulator[i];\n      }\n    }\n\n    if (i < matches.length) {\n      id = trie.getId(matches[i]);\n      map[id] = map[id] ? map[id] : 0;\n      map[id]++;\n\n      if (map[id] === 2) {\n        results[l++] = matches[i];\n      }\n    }\n  }\n\n  return results;\n};\n\nmodule.exports = TrieSearch;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(4);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*===========================================================================*\\\n * Requires\n\\*===========================================================================*/\nvar JClass = __webpack_require__(5);\n\n/*===========================================================================*\\\n * HashArray\n\\*===========================================================================*/\nvar HashArray = JClass._extend({\n  //-----------------------------------\n  // Constructor\n  //-----------------------------------\n  init: function(keyFields, callback, options) {\n    keyFields = keyFields instanceof Array ? keyFields : [keyFields];\n\n    this._map = {};\n    this._list = [];\n    this.callback = callback;\n\n    this.keyFields = keyFields;\n\n    this.isHashArray = true;\n    \n    this.options = options || {\n      ignoreDuplicates: false\n    };\n\n    if (callback) {\n      callback('construct');\n    }\n  },\n  //-----------------------------------\n  // add()\n  //-----------------------------------\n  addOne: function (obj) {\n    var needsDupCheck = false;\n    for (var key in this.keyFields) {\n      key = this.keyFields[key];\n      var inst = this.objectAt(obj, key);\n      if (inst) {\n        if (this.has(inst)) {\n          if (this.options.ignoreDuplicates)\n            return;\n          if (this._map[inst].indexOf(obj) != -1) {\n            // Cannot add the same item twice\n            needsDupCheck = true;\n            continue;\n          }\n          this._map[inst].push(obj);\n        }\n        else this._map[inst] = [obj];\n      }\n    }\n\n    if (!needsDupCheck || this._list.indexOf(obj) == -1)\n      this._list.push(obj);\n  },\n  add: function() {\n    for (var i = 0; i < arguments.length; i++) {\n      this.addOne(arguments[i]);\n    }\n\n    if (this.callback) {\n      this.callback('add', Array.prototype.slice.call(arguments, 0));\n    }\n    \n    return this;\n  },\n  addAll: function (arr) {\n    if (arr.length < 100)\n      this.add.apply(this, arr);\n    else {\n      for (var i = 0; i < arr.length; i++)\n        this.add(arr[i]);\n    }\n    \n    return this;\n  },\n  addMap: function(key, obj) {\n    this._map[key] = obj;\n    if (this.callback) {\n      this.callback('addMap', {\n        key: key,\n        obj: obj\n      });\n    }\n    \n    return this;\n  },\n  //-----------------------------------\n  // Intersection, union, etc.\n  //-----------------------------------\n  /**\n   * Returns a new HashArray that contains the intersection between this (A) and the hasharray passed in (B). Returns A ^ B.\n   */\n  intersection: function (other) {\n    var self = this;\n\n    if (!other || !other.isHashArray)\n      throw Error('Cannot HashArray.intersection() on a non-hasharray object. You passed in: ', other);\n\n    var ret = this.clone(null, true),\n      allItems = this.clone(null, true).addAll(this.all.concat(other.all));\n\n    allItems.all.forEach(function (item) {\n      if (self.collides(item) && other.collides(item))\n        ret.add(item);\n    });\n\n    return ret;\n  },\n  /**\n   * Returns a new HashArray that contains the complement (difference) between this hash array (A) and the hasharray passed in (B). Returns A - B.\n   */\n  complement: function (other) {\n    var self = this;\n\n    if (!other || !other.isHashArray)\n      throw Error('Cannot HashArray.complement() on a non-hasharray object. You passed in: ', other);\n\n    var ret = this.clone(null, true);\n\n    this.all.forEach(function (item) {\n      if (!other.collides(item))\n        ret.add(item);\n    });\n\n    return ret;\n  },\n  //-----------------------------------\n  // Retrieval\n  //-----------------------------------\n  get: function(key) {\n    return (!(this._map[key] instanceof Array) || this._map[key].length != 1) ? this._map[key] : this._map[key][0];\n  },\n  getAll: function(keys) {\n    keys = keys instanceof Array ? keys : [keys];\n\n    if (keys[0] == '*')\n      return this.all;\n\n    var res = new HashArray(this.keyFields);\n    for (var key in keys)\n      res.add.apply(res, this.getAsArray(keys[key]));\n\n    return res.all;\n  },\n  getAsArray: function(key) {\n    return this._map[key] || [];\n  },\n  getUniqueRandomIntegers: function (count, min, max) {\n    var res = [], map = {};\n\n    count = Math.min(Math.max(max - min, 1), count);\n    \n    while (res.length < count)\n    {\n      var r = Math.floor(min + (Math.random() * (max + 1)));\n      if (map[r]) continue;\n      map[r] = true;\n      res.push(r);\n    }\n\n    return res;\n  },\n  sample: function (count, keys) {\n    // http://en.wikipedia.org/wiki/Image_(mathematics)\n    var image = this.all,\n      ixs = {},\n      res = [];\n\n    if (keys)\n      image = this.getAll(keys);\n\n    var rand = this.getUniqueRandomIntegers(count, 0, image.length - 1);\n\n    for (var i = 0; i < rand.length; i++)\n      res.push(image[rand[i]]);\n\n    return res;\n  },\n  //-----------------------------------\n  // Peeking\n  //-----------------------------------\n  has: function(key) {\n    return this._map.hasOwnProperty(key);\n  },\n  collides: function (item) {\n    for (var k in this.keyFields)\n      if (this.has(this.objectAt(item, this.keyFields[k])))\n        return true;\n    \n    return false;\n  },\n  hasMultiple: function(key) {\n    return this._map[key] instanceof Array;\n  },\n  //-----------------------------------\n  // Removal\n  //-----------------------------------\n  removeByKey: function() {\n    var removed = [];\n    for (var i = 0; i < arguments.length; i++) {\n      var key = arguments[i];\n      var items = this._map[key].concat();\n      if (items) {\n        removed = removed.concat(items);\n        for (var j in items) {\n          var item = items[j];\n          for (var ix in this.keyFields) {\n            var key2 = this.objectAt(item, this.keyFields[ix]);\n            if (key2 && this.has(key2)) {\n              var ix = this._map[key2].indexOf(item);\n              if (ix != -1) {\n                this._map[key2].splice(ix, 1);\n              }\n\n              if (this._map[key2].length == 0)\n                delete this._map[key2];\n            }\n          }\n\n          this._list.splice(this._list.indexOf(item), 1);\n        }\n      }\n      delete this._map[key];\n    }\n\n    if (this.callback) {\n      this.callback('removeByKey', removed);\n    }\n    \n    return this;\n  },\n  remove: function() {\n    for (var i = 0; i < arguments.length; i++) {\n      var item = arguments[i];\n      for (var ix in this.keyFields) {\n        var key = this.objectAt(item, this.keyFields[ix]);\n        if (key) {\n          var ix = this._map[key].indexOf(item);\n          if (ix != -1)\n            this._map[key].splice(ix, 1);\n          else\n            throw new Error('HashArray: attempting to remove an object that was never added!' + key);\n\n          if (this._map[key].length == 0)\n            delete this._map[key];\n        }\n      }\n\n      var ix = this._list.indexOf(item);\n\n      if (ix != -1)\n        this._list.splice(ix, 1);\n      else\n        throw new Error('HashArray: attempting to remove an object that was never added!' + key);\n    }\n\n    if (this.callback) {\n      this.callback('remove', arguments);\n    }\n    \n    return this;\n  },\n  removeAll: function() {\n    var old = this._list.concat();\n    this._map = {};\n    this._list = [];\n\n    if (this.callback) {\n      this.callback('remove', old);\n    }\n    \n    return this;\n  },\n  //-----------------------------------\n  // Utility\n  //-----------------------------------\n  objectAt: function(obj, path) {\n    if (typeof path === 'string') {\n      return obj[path];\n    }\n\n    var dup = path.concat();\n    // else assume array.\n    while (dup.length && obj) {\n      obj = obj[dup.shift()];\n    }\n\n    return obj;\n  },\n  //-----------------------------------\n  // Iteration\n  //-----------------------------------\n  forEach: function(keys, callback) {\n    keys = keys instanceof Array ? keys : [keys];\n\n    var objs = this.getAll(keys);\n\n    objs.forEach(callback);\n    \n    return this;\n  },\n  forEachDeep: function(keys, key, callback) {\n    keys = keys instanceof Array ? keys : [keys];\n\n    var self = this,\n      objs = this.getAll(keys);\n\n    objs.forEach(function (item) {\n      callback(self.objectAt(item, key), item);\n    });\n    \n    return this;\n  },\n  //-----------------------------------\n  // Cloning\n  //-----------------------------------\n  clone: function(callback, ignoreItems) {\n    var n = new HashArray(this.keyFields.concat(), callback ? callback : this.callback);\n    if (!ignoreItems)\n      n.add.apply(n, this.all.concat());\n    return n;\n  },\n  //-----------------------------------\n  // Mathematical\n  //-----------------------------------\n  sum: function(keys, key, weightKey) {\n    var self = this,\n      ret = 0;\n    this.forEachDeep(keys, key, function (value, item) {\n      if (weightKey !== undefined)\n        value *= self.objectAt(item, weightKey);\n\n      ret += value;\n    });\n    return ret;\n  },\n  average: function(keys, key, weightKey) {\n    var ret = 0,\n      tot = 0,\n      weightsTotal = 0,\n      self = this;\n\n    if (weightKey !== undefined)\n      this.forEachDeep(keys, weightKey, function (value) {\n        weightsTotal += value;\n      })\n\n    this.forEachDeep(keys, key, function (value, item) {\n      if (weightKey !== undefined)\n        value *= (self.objectAt(item, weightKey) / weightsTotal);\n\n      ret += value;\n      tot++;\n    });\n\n    return weightKey !== undefined ? ret : ret / tot;\n  },\n  //-----------------------------------\n  // Filtering\n  //-----------------------------------\n  filter: function (keys, callbackOrKey) {\n    var self = this;\n    \n    var callback = (typeof(callbackOrKey) == 'function') ? callbackOrKey : defaultCallback;\n\n    var ha = new HashArray(this.keyFields);\n    ha.addAll(this.getAll(keys).filter(callback));\n    return ha;\n    \n    function defaultCallback(item) {\n      var val = self.objectAt(item, callbackOrKey);\n      return val !== undefined && val !== false;\n    }\n  }\n});\n\n//-----------------------------------\n// Operators\n//-----------------------------------\nObject.defineProperty(HashArray.prototype, 'all', {\n  get: function () {\n    return this._list;\n  }\n});\n\nObject.defineProperty(HashArray.prototype, 'map', {\n  get: function () {\n    return this._map;\n  }\n});\n\nmodule.exports = HashArray;\n\n//-----------------------------------\n// Browser\n//-----------------------------------\nif (typeof window !== 'undefined')\n  window.HashArray = HashArray;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * jclass v1.1.9\n * https://github.com/riga/jclass\n *\n * Marcel Rieger, 2015\n * MIT licensed, http://www.opensource.org/licenses/mit-license\n */\n\n(function(factory) {\n\n  /**\n   * Make jclass available in any context.\n   */\n\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n  } else if (typeof(exports) == \"object\") {\n    // CommonJS\n    exports = factory();\n\n    if (typeof(module) == \"object\") {\n      // NodeJS\n      module.exports = exports;\n    }\n\n  } else if (window) {\n    // Browser\n    window.JClass = factory();\n\n  } else if (typeof(console) == \"object\" && console.error instanceof Function) {\n    // error case\n    console.error(\"cannot determine environment\");\n  }\n\n})(function() {\n\n  /**\n   * Helper functions.\n   */\n\n  /**\n   * Checks whether a passed object is a function.\n   *\n   * @param obj - The object to check.\n   * @returns {boolean}\n   */\n  var isFn = function(obj) {\n    return obj instanceof Function;\n  };\n\n  /**\n   * Extends a target object by one or more source objects with shallow key comparisons. Note that\n   * the extension is done in-place.\n   *\n   * @param {object} target - The target object to extend.\n   * @param {...object} source - Source objects.\n   * @returns {object} The extended object.\n   */\n  var extend = function(target) {\n    var sources = Array.prototype.slice.call(arguments, 1);\n\n    // loop through all sources\n    for (var i in sources) {\n      var source = sources[i];\n\n      // object check\n      if (typeof(source) != \"object\") {\n        continue;\n      }\n\n      // loop through all source attributes\n      for (var key in source) {\n        target[key] = source[key];\n      }\n    }\n\n    return target;\n  };\n\n\n  /**\n   * Default options.\n   */\n\n  var defaultOptions = {\n    // internal object for indicating that class objects don't have a class object themselves,\n    // may not be used by users\n    _isClassObject: false\n  };\n\n\n  /**\n   * Flags.\n   */\n\n  // flag to distinguish between prototype and class instantiation \n  var initializing = false;\n\n\n  /**\n   * Base class definition.\n   */\n\n  // empty BaseClass implementation\n  var BaseClass = function(){};\n\n  // add the _subClasses entry\n  BaseClass._subClasses = [];\n\n  // empty init method\n  BaseClass.prototype.init = function(){};\n\n\n  /**\n   * Extend mechanism. Returns a derived class.\n   *\n   * @param {object} instanceMembers - Members that will be owned by instances.\n   * @param {object} classMembers - Members that will be owned by the class itself.\n   * @returns {JClass}\n   */\n  BaseClass._extend = function(instanceMembers, classMembers, options) {\n\n    // default arguments\n    if (instanceMembers === undefined) {\n      instanceMembers = {};\n    }\n    if (classMembers === undefined) {\n      classMembers = {};\n    }\n    if (options === undefined) {\n      options = {};\n    }\n\n    // mixin default options\n    options = extend({}, defaultOptions, options);\n\n\n    // sub class dummy constructor\n    var JClass = function() {\n      // nothing happens here when we are initializing\n      if (initializing) {\n        return;\n      }\n\n      // store a reference to the class itself\n      this._class = JClass;\n\n      // all construction is actually done in the init method\n      if (this.init instanceof Function) {\n        this.init.apply(this, arguments);\n      }\n    };\n\n\n    // alias for readability\n    var SuperClass = this;\n\n    // create an instance of the super class via new\n    // the flag sandwich prevents a call to the init method\n    initializing = true;\n    var prototype = new SuperClass();\n    initializing = false;\n\n    // get the prototype of the super class\n    var superPrototype = SuperClass.prototype;\n\n    // the instance of the super class is our new prototype\n    JClass.prototype = prototype;\n\n    // enforce the constructor to be what we expect\n    // calls to the constructor will invoke the init method (see above)\n    JClass.prototype.constructor = JClass;\n\n    // store a reference to the super class\n    JClass._superClass = SuperClass;\n\n    // store references to all extending classes\n    JClass._subClasses = [];\n    SuperClass._subClasses.push(JClass);\n\n    // make this class extendable as well\n    JClass._extend = SuperClass._extend;\n\n\n    // _extends returns true if the class itself extended \"target\"\n    // in any hierarchy, e.g. every class extends \"JClass\" itself\n    JClass._extends = function(target) {\n      // this function operates recursive, so stop when the super class is our BaseClass\n      if (this._superClass == BaseClass) {\n        return false;\n      }\n\n      // success case\n      if (target == this._superClass || target == BaseClass) {\n        return true;\n      }\n\n      // continue with the next super class\n      return this._superClass._extends(target);\n    };\n\n\n    // propagate instance members directly to the created protoype,\n    // the member is either a normal member or a descriptor\n    for (var key in instanceMembers) {\n      var property = Object.getOwnPropertyDescriptor(instanceMembers, key);\n      var member   = property.value;\n\n      // descriptor flag set?\n      if (member !== null && typeof(member) == \"object\" && member.descriptor) {\n        Object.defineProperty(prototype, key, member);\n\n      // getter/setter syntax\n      } else if (!(\"value\" in property) && (\"set\" in property || \"get\" in property)) {\n        Object.defineProperty(prototype, key, property);\n\n      // normal member, simple assignment\n      } else {\n        prototype[key] = member;\n\n        // if both member and the super member are distinct functions\n        // add the super member to the member as \"_super\"\n        var superMember = superPrototype[key];\n        if (isFn(member) && isFn(superMember) && member !== superMember) {\n          member._super = superMember;\n        }\n      }\n    }\n\n\n    // propagate class members to the _members object\n    if (!options._isClassObject) {\n      // try to find the super class of the _members object \n      var ClassMembersSuperClass = SuperClass._members === undefined ?\n        BaseClass : SuperClass._members._class;\n\n      // create the actual class of the _members instance\n      // with an updated version of our options\n      var opts = extend({}, options, { _isClassObject: true });\n      var ClassMembersClass = ClassMembersSuperClass._extend(classMembers, {}, opts);\n\n      // store the actual JClass in ClassMembersClass\n      ClassMembersClass._instanceClass = JClass;\n\n      // create the _members instance\n      JClass._members = new ClassMembersClass();\n    }\n\n\n    // return the new class\n    return JClass;\n  };\n\n\n  /**\n   * Converts arbitrary protoype-style classes to our JClass definition.\n   *\n   * @param {function} cls - The class to convert.\n   * @returns {JClass}\n   */\n  BaseClass._convert = function(cls, options) {\n    // the properties consist of the class' prototype\n    var instanceMembers = cls.prototype;\n\n    // add the constructor function\n    instanceMembers.init = function() {\n      // simply create an instance of our target class\n      var origin = this._origin = BaseClass._construct(cls, arguments);\n\n      // add properties for each own property in _origin\n      Object.keys(origin).forEach(function(key) {\n        if (!origin.hasOwnProperty(key)) {\n          return;\n        }\n\n        Object.defineProperty(this, key, {\n          get: function() {\n            return origin[key];\n          }\n        });\n      }, this);\n    };\n\n    // finally, create and return our new class\n    return BaseClass._extend(instanceMembers, {}, options);\n  };\n\n\n  /**\n   * Returns an instance of a class with a list of arguments. This provides an apply-like\n   * constructor usage. Note that this approach does not work with native constructors (e.g. String\n   * or Boolean).\n   *\n   * @param {Class|JClass} cls - The class to instantiate. This may be a JClass or a prototype-based\n   *   class.\n   * @param {array} [args=[]] - Arguments to pass to the constructor.\n   * @returns {instance}\n   */\n  BaseClass._construct = function(cls, args) {\n    // empty default args\n    if (args === undefined) {\n      args = [];\n    }\n\n    // create a class wrapper that calls cls like a function\n    var Class = function() {\n      return cls.apply(this, args);\n    };\n\n    // copy the prototype\n    Class.prototype = cls.prototype;\n\n    // return a new instance\n    return new Class();\n  };\n\n\n  /**\n   * Returns a property descriptor of the super class.\n   *\n   * @param {JClass|instance} cls - A JClass or an instance of a JClass to retrieve the property\n   *   descriptor from.\n   * @param {string} prop - The name of the property descriptor to get.\n   * @returns {object}\n   */\n  BaseClass._superDescriptor = function(cls, prop) {\n    // if cls is an instance, use its class\n    if (\"_class\" in cls && cls instanceof cls._class) {\n      cls = cls._class;\n    }\n\n    // a JClass?\n    if (\"_extends\" in cls && cls._extends instanceof Function && cls._extends(this)) {\n      return Object.getOwnPropertyDescriptor(cls._superClass.prototype, prop);\n    } else {\n      return undefined;\n    }\n  };\n\n\n  /**\n   * Return the BaseClass.\n   */\n\n  return BaseClass;\n});\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// c353629349a6127f7b6b.worker.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/chip-player-js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c353629349a6127f7b6b","import TrieSearch from 'trie-search';\n\nconst trie = new TrieSearch('file', {\n  indexField: 'id',\n  idFieldOrFunction: 'id',\n  splitOnRegEx: /[^A-Za-z0-9]/g,\n});\n\nonmessage = (message) => {\n  const data = message.data;\n  switch (data.type) {\n    case 'load':\n      const start = performance.now();\n      const files = JSON.parse(data.payload).map((file, i) => ({id: i, file: file}));\n      trie.addAll(files);\n      const time = (performance.now() - start).toFixed(1);\n      console.log('Added %s items (%s tokens) to search trie in %s ms.', files.length, trie.size, time);\n      postMessage({\n        type: 'status',\n        payload: {numRecords: files.length}\n      });\n      break;\n    case 'search':\n      search(data.payload.query, data.payload.maxResults);\n      break;\n  }\n};\n\nfunction search(query, maxResults) {\n  if (!Array.isArray(query))\n    query = query.trim().split(' ').filter(n => n !== '');\n  let results = trie.get(query, TrieSearch.UNION_REDUCER) || [];\n  const count = results.length;\n  if (maxResults) {\n    results = results.slice(0, maxResults);\n  }\n  postMessage({\n    type: 'results',\n    payload: {\n      results: results,\n      count: count,\n    }\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/SearchWorker.js","module.exports = require('./src/TrieSearch');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/trie-search/index.js\n// module id = 1\n// module chunks = 0","var HashArray = require('hasharray');\n\nvar MAX_CACHE_SIZE = 64;\n\nvar IS_WHITESPACE = /^[\\s]*$/;\n\nvar DEFAULT_INTERNATIONALIZE_EXPAND_REGEXES = [\n  {\n    regex: /[åäàáâãæ]/ig,\n    alternate: 'a'\n  },\n  {\n    regex: /[èéêë]/ig,\n    alternate: 'e'\n  },\n  {\n    regex: /[ìíîï]/ig,\n    alternate: 'i'\n  },\n  {\n    regex: /[òóôõö]/ig,\n    alternate: 'o'\n  },\n  {\n    regex: /[ùúûü]/ig,\n    alternate: 'u'\n  },\n  {\n    regex: /[æ]/ig,\n    alternate: 'ae'\n  }\n];\n\nString.prototype.replaceCharAt=function(index, replacement) {\n  return this.substr(0, index) + replacement + this.substr(index + replacement.length);\n};\n\nvar TrieSearch = function (keyFields, options) {\n  this.options = options || {};\n\n  // Default ignoreCase to true\n  this.options.ignoreCase = (this.options.ignoreCase === undefined) ? true : this.options.ignoreCase;\n  this.options.maxCacheSize = this.options.maxCacheSize || MAX_CACHE_SIZE;\n  this.options.cache = this.options.hasOwnProperty('cache') ? this.options.cache : true;\n  this.options.splitOnRegEx = this.options.hasOwnProperty('splitOnRegEx') ? this.options.splitOnRegEx : /\\s/g;\n  this.options.splitOnGetRegEx = this.options.hasOwnProperty('splitOnGetRegEx') ? this.options.splitOnGetRegEx : this.options.splitOnRegEx;\n  this.options.min = this.options.min || 1;\n  this.options.keepAll = this.options.hasOwnProperty('keepAll') ? this.options.keepAll : false;\n  this.options.keepAllKey = this.options.hasOwnProperty('keepAllKey') ? this.options.keepAllKey : 'id';\n  this.options.idFieldOrFunction = this.options.hasOwnProperty('idFieldOrFunction') ? this.options.idFieldOrFunction : undefined;\n  this.options.expandRegexes = this.options.expandRegexes || DEFAULT_INTERNATIONALIZE_EXPAND_REGEXES;\n  this.options.insertFullUnsplitKey = this.options.hasOwnProperty('insertFullUnsplitKey') ? this.options.insertFullUnsplitKey : false;\n\n  this.keyFields = keyFields ? (keyFields instanceof Array ? keyFields : [keyFields]) : [];\n  this.root = {};\n  this.size = 0;\n\n  if (this.options.cache) {\n    this.getCache = new HashArray('key', null, {ignoreDuplicates: true});\n  }\n};\n\nfunction deepLookup(obj, keys) {\n  return keys.length === 1 ? obj[keys[0]] : deepLookup(obj[keys[0]], keys.slice(1, keys.length));\n}\n\nTrieSearch.prototype = {\n  add: function (obj, customKeys) {\n    if (this.options.cache)\n      this.clearCache();\n\n    // Someone might have called add via an array forEach where the second param is a number\n    if (typeof customKeys === 'number') {\n      customKeys = undefined;\n    }\n\n    var keyFields = customKeys || this.keyFields;\n\n    for (var k in keyFields)\n    {\n      var key = keyFields[k],\n        isKeyArr = key instanceof Array,\n        val = isKeyArr ? deepLookup(obj, key) : obj[key];\n\n      if (!val) continue;\n\n      val = val.toString();\n      val = this.options.ignoreCase ? val.toLowerCase() : val;\n\n      var expandedValues = this.expandString(val);\n\n      for (var v = 0; v < expandedValues.length; v++) {\n        var expandedValue = expandedValues[v];\n\n        this.map(expandedValue, obj);\n      }\n    }\n  },\n  /**\n   * By default using the options.expandRegexes, given a string like 'ö är bra', this will expand it to:\n   *\n   * ['ö är bra', 'o är bra', 'ö ar bra', 'o ar bra']\n   *\n   * By default this was built to allow for internationalization, but it could be also be expanded to\n   * allow for word alternates, etc. like spelling alternates ('teh' and 'the').\n   *\n   * This is used for insertion! This should not be used for lookup since if a person explicitly types\n   * 'ä' they probably do not want to see all results for 'a'.\n   *\n   * @param value The string to find alternates for.\n   * @returns {Array} Always returns an array even if no matches.\n   */\n  expandString: function(value) {\n    var values = [value];\n\n    if (this.options.expandRegexes && this.options.expandRegexes.length) {\n      for (var i = 0; i < this.options.expandRegexes.length; i++) {\n        var er = this.options.expandRegexes[i];\n        var match;\n\n        while((match = er.regex.exec(value)) !== null) {\n          var alternateValue = value.replaceCharAt(match.index, er.alternate);\n          values.push(alternateValue);\n        }\n      }\n    }\n\n    return values;\n  },\n  addAll: function (arr, customKeys) {\n    for (var i = 0; i < arr.length; i++)\n      this.add(arr[i], customKeys);\n  },\n  reset: function () {\n    this.root = {};\n    this.size = 0;\n  },\n  clearCache: function () {\n    // if (this.getCache && !this.getCache._list.length) {\n    //   return;\n    // }\n    this.getCache = new HashArray('key', null, {ignoreDuplicates: true});\n  },\n  cleanCache: function () {\n    while (this.getCache.all.length > this.options.maxCacheSize)\n      this.getCache.remove(this.getCache.all[0]);\n  },\n  addFromObject: function (obj, valueField) {\n    if (this.options.cache)\n      this.clearCache();\n\n    valueField = valueField || 'value';\n\n    if (this.keyFields.indexOf('_key_') == -1)\n      this.keyFields.push('_key_');\n\n    for (var key in obj)\n    {\n      var o = {_key_: key};\n      o[valueField] = obj[key];\n      this.add(o);\n    }\n  },\n  map: function (key, value) {\n    if (this.options.splitOnRegEx && this.options.splitOnRegEx.test(key))\n    {\n      var phrases = key.split(this.options.splitOnRegEx);\n      var emptySplitMatch = phrases.filter(function(p) { return IS_WHITESPACE.test(p); });\n      var selfMatch = phrases.filter(function(p) { return p === key; });\n      var selfIsOnlyMatch = selfMatch.length + emptySplitMatch.length === phrases.length;\n\n      // There is an edge case that a RegEx with a positive lookeahed like:\n      //  /?=[A-Z]/ // Split on capital letters for a camelcase sentence\n      // Will then match again when we call map, creating an infinite stack loop.\n      if (!selfIsOnlyMatch) {\n        for (var i = 0, l = phrases.length; i < l; i++) {\n          if (!IS_WHITESPACE.test(phrases[i])) {\n            this.map(phrases[i], value);\n          }\n        }\n\n        if (!this.options.insertFullUnsplitKey) {\n          return;\n        }\n      }\n    }\n\n    if (this.options.cache)\n      this.clearCache();\n\n    if (this.options.keepAll) {\n      this.indexed = this.indexed || new HashArray([this.options.keepAllKey], null, {ignoreDuplicates: true});\n      this.indexed.add(value);\n    }\n\n    if (this.options.ignoreCase) {\n      key = key.toLowerCase();\n    }\n\n    var keyArr = this.keyToArr(key),\n      self = this;\n\n    insert(keyArr, value, this.root);\n\n    function insert(keyArr, value, node) {\n      if (keyArr.length == 0)\n      {\n        node['value'] = node['value'] || [];\n        node['value'].push(value);\n        return; \n      }\n\n      var k = keyArr.shift();\n\n      if (!node[k])\n        self.size++;\n\n      node[k] = node[k] || {};\n\n      insert(keyArr, value, node[k])\n    }\n  },\n  keyToArr: function (key) {\n    var keyArr;\n      \n    if (this.options.min && this.options.min > 1)\n    {\n      if (key.length < this.options.min)\n        return [];\n\n      keyArr = [key.substr(0, this.options.min)];\n      keyArr = keyArr.concat(key.substr(this.options.min).split(''));\n    }\n    else keyArr = key.split('');\n\n    return keyArr;\n  },\n  findNode: function (key) {\n    if (this.options.min > 0 && key.length < this.options.min)\n      return [];\n\n    return f(this.keyToArr(key), this.root);\n\n    function f(keyArr, node) {\n      if (!node) return undefined;\n      if (keyArr.length == 0) return node;\n\n      var k = keyArr.shift();\n      return f(keyArr, node[k]);\n    }\n  },\n  _get: function (phrase) {\n    phrase = this.options.ignoreCase ? phrase.toLowerCase() : phrase;\n    \n    var c, node;\n    if (this.options.cache && (c = this.getCache.get(phrase)))\n      return c.value;\n\n    var ret = undefined,\n      haKeyFields = this.options.indexField ? [this.options.indexField] : this.keyFields,\n      words = this.options.splitOnGetRegEx ? phrase.split(this.options.splitOnGetRegEx) : [phrase];\n\n    for (var w = 0, l = words.length; w < l; w++)\n    {\n      if (this.options.min && words[w].length < this.options.min)\n        continue;\n\n      var temp = new HashArray(haKeyFields, null, {ignoreDuplicates: true});\n\n      if (node = this.findNode(words[w]))\n        aggregate(node, temp);\n\n      ret = ret ? ret.intersection(temp) : temp;\n    }\n    \n    var v = ret ? ret.all : [];\n\n    if (this.options.cache)\n    {\n      this.getCache.add({key: phrase, value: v});\n      this.cleanCache();\n    }\n\n    return v;\n    \n    function aggregate(node, ha) {\n      if (node.value && node.value.length)\n        ha.addAll(node.value);\n\n      for (var k in node)\n        if (k != 'value')\n          aggregate(node[k], ha);\n    }\n  },\n  get: function (phrases, reducer) {\n    var self = this,\n      haKeyFields = this.options.indexField ? [this.options.indexField] : this.keyFields,\n      ret = undefined,\n      accumulator = undefined;\n\n    if (reducer && !this.options.idFieldOrFunction) {\n      throw new Error('To use the accumulator, you must specify and idFieldOrFunction');\n    }\n\n    phrases = (phrases instanceof Array) ? phrases : [phrases];\n\n    for (var i = 0, l = phrases.length; i < l; i++)\n    {\n      var matches = this._get(phrases[i]);\n\n      if (reducer) {\n        accumulator = reducer(accumulator, phrases[i], matches, this);\n      } else {\n        ret = ret ? ret.addAll(matches) : new HashArray(haKeyFields, null, {ignoreDuplicates: true}).addAll(matches);\n      }\n    }\n\n    if (!reducer) {\n      return ret.all;\n    }\n\n    return accumulator;\n  },\n  getId: function (item) {\n    return typeof this.options.idFieldOrFunction === 'function' ? this.options.idFieldOrFunction(item) : item[this.options.idFieldOrFunction];\n  }\n};\n\nTrieSearch.UNION_REDUCER = function(accumulator, phrase, matches, trie) {\n  if (accumulator === undefined) {\n    return matches;\n  }\n\n  var map = {}, i, id;\n  var maxLength = Math.max(accumulator.length, matches.length);\n  var results = [];\n  var l = 0;\n\n  // One loop, O(N) for max length of accumulator or matches.\n  for (i = 0; i < maxLength; i++) {\n    if (i < accumulator.length) {\n      id = trie.getId(accumulator[i]);\n      map[id] = map[id] ? map[id] : 0;\n      map[id]++;\n\n      if (map[id] === 2) {\n        results[l++] = accumulator[i];\n      }\n    }\n\n    if (i < matches.length) {\n      id = trie.getId(matches[i]);\n      map[id] = map[id] ? map[id] : 0;\n      map[id]++;\n\n      if (map[id] === 2) {\n        results[l++] = matches[i];\n      }\n    }\n  }\n\n  return results;\n};\n\nmodule.exports = TrieSearch;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/trie-search/src/TrieSearch.js\n// module id = 2\n// module chunks = 0","module.exports = require('./src/HashArray.js');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hasharray/index.js\n// module id = 3\n// module chunks = 0","/*===========================================================================*\\\n * Requires\n\\*===========================================================================*/\nvar JClass = require('jclass');\n\n/*===========================================================================*\\\n * HashArray\n\\*===========================================================================*/\nvar HashArray = JClass._extend({\n  //-----------------------------------\n  // Constructor\n  //-----------------------------------\n  init: function(keyFields, callback, options) {\n    keyFields = keyFields instanceof Array ? keyFields : [keyFields];\n\n    this._map = {};\n    this._list = [];\n    this.callback = callback;\n\n    this.keyFields = keyFields;\n\n    this.isHashArray = true;\n    \n    this.options = options || {\n      ignoreDuplicates: false\n    };\n\n    if (callback) {\n      callback('construct');\n    }\n  },\n  //-----------------------------------\n  // add()\n  //-----------------------------------\n  addOne: function (obj) {\n    var needsDupCheck = false;\n    for (var key in this.keyFields) {\n      key = this.keyFields[key];\n      var inst = this.objectAt(obj, key);\n      if (inst) {\n        if (this.has(inst)) {\n          if (this.options.ignoreDuplicates)\n            return;\n          if (this._map[inst].indexOf(obj) != -1) {\n            // Cannot add the same item twice\n            needsDupCheck = true;\n            continue;\n          }\n          this._map[inst].push(obj);\n        }\n        else this._map[inst] = [obj];\n      }\n    }\n\n    if (!needsDupCheck || this._list.indexOf(obj) == -1)\n      this._list.push(obj);\n  },\n  add: function() {\n    for (var i = 0; i < arguments.length; i++) {\n      this.addOne(arguments[i]);\n    }\n\n    if (this.callback) {\n      this.callback('add', Array.prototype.slice.call(arguments, 0));\n    }\n    \n    return this;\n  },\n  addAll: function (arr) {\n    if (arr.length < 100)\n      this.add.apply(this, arr);\n    else {\n      for (var i = 0; i < arr.length; i++)\n        this.add(arr[i]);\n    }\n    \n    return this;\n  },\n  addMap: function(key, obj) {\n    this._map[key] = obj;\n    if (this.callback) {\n      this.callback('addMap', {\n        key: key,\n        obj: obj\n      });\n    }\n    \n    return this;\n  },\n  //-----------------------------------\n  // Intersection, union, etc.\n  //-----------------------------------\n  /**\n   * Returns a new HashArray that contains the intersection between this (A) and the hasharray passed in (B). Returns A ^ B.\n   */\n  intersection: function (other) {\n    var self = this;\n\n    if (!other || !other.isHashArray)\n      throw Error('Cannot HashArray.intersection() on a non-hasharray object. You passed in: ', other);\n\n    var ret = this.clone(null, true),\n      allItems = this.clone(null, true).addAll(this.all.concat(other.all));\n\n    allItems.all.forEach(function (item) {\n      if (self.collides(item) && other.collides(item))\n        ret.add(item);\n    });\n\n    return ret;\n  },\n  /**\n   * Returns a new HashArray that contains the complement (difference) between this hash array (A) and the hasharray passed in (B). Returns A - B.\n   */\n  complement: function (other) {\n    var self = this;\n\n    if (!other || !other.isHashArray)\n      throw Error('Cannot HashArray.complement() on a non-hasharray object. You passed in: ', other);\n\n    var ret = this.clone(null, true);\n\n    this.all.forEach(function (item) {\n      if (!other.collides(item))\n        ret.add(item);\n    });\n\n    return ret;\n  },\n  //-----------------------------------\n  // Retrieval\n  //-----------------------------------\n  get: function(key) {\n    return (!(this._map[key] instanceof Array) || this._map[key].length != 1) ? this._map[key] : this._map[key][0];\n  },\n  getAll: function(keys) {\n    keys = keys instanceof Array ? keys : [keys];\n\n    if (keys[0] == '*')\n      return this.all;\n\n    var res = new HashArray(this.keyFields);\n    for (var key in keys)\n      res.add.apply(res, this.getAsArray(keys[key]));\n\n    return res.all;\n  },\n  getAsArray: function(key) {\n    return this._map[key] || [];\n  },\n  getUniqueRandomIntegers: function (count, min, max) {\n    var res = [], map = {};\n\n    count = Math.min(Math.max(max - min, 1), count);\n    \n    while (res.length < count)\n    {\n      var r = Math.floor(min + (Math.random() * (max + 1)));\n      if (map[r]) continue;\n      map[r] = true;\n      res.push(r);\n    }\n\n    return res;\n  },\n  sample: function (count, keys) {\n    // http://en.wikipedia.org/wiki/Image_(mathematics)\n    var image = this.all,\n      ixs = {},\n      res = [];\n\n    if (keys)\n      image = this.getAll(keys);\n\n    var rand = this.getUniqueRandomIntegers(count, 0, image.length - 1);\n\n    for (var i = 0; i < rand.length; i++)\n      res.push(image[rand[i]]);\n\n    return res;\n  },\n  //-----------------------------------\n  // Peeking\n  //-----------------------------------\n  has: function(key) {\n    return this._map.hasOwnProperty(key);\n  },\n  collides: function (item) {\n    for (var k in this.keyFields)\n      if (this.has(this.objectAt(item, this.keyFields[k])))\n        return true;\n    \n    return false;\n  },\n  hasMultiple: function(key) {\n    return this._map[key] instanceof Array;\n  },\n  //-----------------------------------\n  // Removal\n  //-----------------------------------\n  removeByKey: function() {\n    var removed = [];\n    for (var i = 0; i < arguments.length; i++) {\n      var key = arguments[i];\n      var items = this._map[key].concat();\n      if (items) {\n        removed = removed.concat(items);\n        for (var j in items) {\n          var item = items[j];\n          for (var ix in this.keyFields) {\n            var key2 = this.objectAt(item, this.keyFields[ix]);\n            if (key2 && this.has(key2)) {\n              var ix = this._map[key2].indexOf(item);\n              if (ix != -1) {\n                this._map[key2].splice(ix, 1);\n              }\n\n              if (this._map[key2].length == 0)\n                delete this._map[key2];\n            }\n          }\n\n          this._list.splice(this._list.indexOf(item), 1);\n        }\n      }\n      delete this._map[key];\n    }\n\n    if (this.callback) {\n      this.callback('removeByKey', removed);\n    }\n    \n    return this;\n  },\n  remove: function() {\n    for (var i = 0; i < arguments.length; i++) {\n      var item = arguments[i];\n      for (var ix in this.keyFields) {\n        var key = this.objectAt(item, this.keyFields[ix]);\n        if (key) {\n          var ix = this._map[key].indexOf(item);\n          if (ix != -1)\n            this._map[key].splice(ix, 1);\n          else\n            throw new Error('HashArray: attempting to remove an object that was never added!' + key);\n\n          if (this._map[key].length == 0)\n            delete this._map[key];\n        }\n      }\n\n      var ix = this._list.indexOf(item);\n\n      if (ix != -1)\n        this._list.splice(ix, 1);\n      else\n        throw new Error('HashArray: attempting to remove an object that was never added!' + key);\n    }\n\n    if (this.callback) {\n      this.callback('remove', arguments);\n    }\n    \n    return this;\n  },\n  removeAll: function() {\n    var old = this._list.concat();\n    this._map = {};\n    this._list = [];\n\n    if (this.callback) {\n      this.callback('remove', old);\n    }\n    \n    return this;\n  },\n  //-----------------------------------\n  // Utility\n  //-----------------------------------\n  objectAt: function(obj, path) {\n    if (typeof path === 'string') {\n      return obj[path];\n    }\n\n    var dup = path.concat();\n    // else assume array.\n    while (dup.length && obj) {\n      obj = obj[dup.shift()];\n    }\n\n    return obj;\n  },\n  //-----------------------------------\n  // Iteration\n  //-----------------------------------\n  forEach: function(keys, callback) {\n    keys = keys instanceof Array ? keys : [keys];\n\n    var objs = this.getAll(keys);\n\n    objs.forEach(callback);\n    \n    return this;\n  },\n  forEachDeep: function(keys, key, callback) {\n    keys = keys instanceof Array ? keys : [keys];\n\n    var self = this,\n      objs = this.getAll(keys);\n\n    objs.forEach(function (item) {\n      callback(self.objectAt(item, key), item);\n    });\n    \n    return this;\n  },\n  //-----------------------------------\n  // Cloning\n  //-----------------------------------\n  clone: function(callback, ignoreItems) {\n    var n = new HashArray(this.keyFields.concat(), callback ? callback : this.callback);\n    if (!ignoreItems)\n      n.add.apply(n, this.all.concat());\n    return n;\n  },\n  //-----------------------------------\n  // Mathematical\n  //-----------------------------------\n  sum: function(keys, key, weightKey) {\n    var self = this,\n      ret = 0;\n    this.forEachDeep(keys, key, function (value, item) {\n      if (weightKey !== undefined)\n        value *= self.objectAt(item, weightKey);\n\n      ret += value;\n    });\n    return ret;\n  },\n  average: function(keys, key, weightKey) {\n    var ret = 0,\n      tot = 0,\n      weightsTotal = 0,\n      self = this;\n\n    if (weightKey !== undefined)\n      this.forEachDeep(keys, weightKey, function (value) {\n        weightsTotal += value;\n      })\n\n    this.forEachDeep(keys, key, function (value, item) {\n      if (weightKey !== undefined)\n        value *= (self.objectAt(item, weightKey) / weightsTotal);\n\n      ret += value;\n      tot++;\n    });\n\n    return weightKey !== undefined ? ret : ret / tot;\n  },\n  //-----------------------------------\n  // Filtering\n  //-----------------------------------\n  filter: function (keys, callbackOrKey) {\n    var self = this;\n    \n    var callback = (typeof(callbackOrKey) == 'function') ? callbackOrKey : defaultCallback;\n\n    var ha = new HashArray(this.keyFields);\n    ha.addAll(this.getAll(keys).filter(callback));\n    return ha;\n    \n    function defaultCallback(item) {\n      var val = self.objectAt(item, callbackOrKey);\n      return val !== undefined && val !== false;\n    }\n  }\n});\n\n//-----------------------------------\n// Operators\n//-----------------------------------\nObject.defineProperty(HashArray.prototype, 'all', {\n  get: function () {\n    return this._list;\n  }\n});\n\nObject.defineProperty(HashArray.prototype, 'map', {\n  get: function () {\n    return this._map;\n  }\n});\n\nmodule.exports = HashArray;\n\n//-----------------------------------\n// Browser\n//-----------------------------------\nif (typeof window !== 'undefined')\n  window.HashArray = HashArray;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hasharray/src/HashArray.js\n// module id = 4\n// module chunks = 0","/**\n * jclass v1.1.9\n * https://github.com/riga/jclass\n *\n * Marcel Rieger, 2015\n * MIT licensed, http://www.opensource.org/licenses/mit-license\n */\n\n(function(factory) {\n\n  /**\n   * Make jclass available in any context.\n   */\n\n  if (typeof(define) == \"function\" && define.amd) {\n    // AMD\n    define([], factory);\n\n  } else if (typeof(exports) == \"object\") {\n    // CommonJS\n    exports = factory();\n\n    if (typeof(module) == \"object\") {\n      // NodeJS\n      module.exports = exports;\n    }\n\n  } else if (window) {\n    // Browser\n    window.JClass = factory();\n\n  } else if (typeof(console) == \"object\" && console.error instanceof Function) {\n    // error case\n    console.error(\"cannot determine environment\");\n  }\n\n})(function() {\n\n  /**\n   * Helper functions.\n   */\n\n  /**\n   * Checks whether a passed object is a function.\n   *\n   * @param obj - The object to check.\n   * @returns {boolean}\n   */\n  var isFn = function(obj) {\n    return obj instanceof Function;\n  };\n\n  /**\n   * Extends a target object by one or more source objects with shallow key comparisons. Note that\n   * the extension is done in-place.\n   *\n   * @param {object} target - The target object to extend.\n   * @param {...object} source - Source objects.\n   * @returns {object} The extended object.\n   */\n  var extend = function(target) {\n    var sources = Array.prototype.slice.call(arguments, 1);\n\n    // loop through all sources\n    for (var i in sources) {\n      var source = sources[i];\n\n      // object check\n      if (typeof(source) != \"object\") {\n        continue;\n      }\n\n      // loop through all source attributes\n      for (var key in source) {\n        target[key] = source[key];\n      }\n    }\n\n    return target;\n  };\n\n\n  /**\n   * Default options.\n   */\n\n  var defaultOptions = {\n    // internal object for indicating that class objects don't have a class object themselves,\n    // may not be used by users\n    _isClassObject: false\n  };\n\n\n  /**\n   * Flags.\n   */\n\n  // flag to distinguish between prototype and class instantiation \n  var initializing = false;\n\n\n  /**\n   * Base class definition.\n   */\n\n  // empty BaseClass implementation\n  var BaseClass = function(){};\n\n  // add the _subClasses entry\n  BaseClass._subClasses = [];\n\n  // empty init method\n  BaseClass.prototype.init = function(){};\n\n\n  /**\n   * Extend mechanism. Returns a derived class.\n   *\n   * @param {object} instanceMembers - Members that will be owned by instances.\n   * @param {object} classMembers - Members that will be owned by the class itself.\n   * @returns {JClass}\n   */\n  BaseClass._extend = function(instanceMembers, classMembers, options) {\n\n    // default arguments\n    if (instanceMembers === undefined) {\n      instanceMembers = {};\n    }\n    if (classMembers === undefined) {\n      classMembers = {};\n    }\n    if (options === undefined) {\n      options = {};\n    }\n\n    // mixin default options\n    options = extend({}, defaultOptions, options);\n\n\n    // sub class dummy constructor\n    var JClass = function() {\n      // nothing happens here when we are initializing\n      if (initializing) {\n        return;\n      }\n\n      // store a reference to the class itself\n      this._class = JClass;\n\n      // all construction is actually done in the init method\n      if (this.init instanceof Function) {\n        this.init.apply(this, arguments);\n      }\n    };\n\n\n    // alias for readability\n    var SuperClass = this;\n\n    // create an instance of the super class via new\n    // the flag sandwich prevents a call to the init method\n    initializing = true;\n    var prototype = new SuperClass();\n    initializing = false;\n\n    // get the prototype of the super class\n    var superPrototype = SuperClass.prototype;\n\n    // the instance of the super class is our new prototype\n    JClass.prototype = prototype;\n\n    // enforce the constructor to be what we expect\n    // calls to the constructor will invoke the init method (see above)\n    JClass.prototype.constructor = JClass;\n\n    // store a reference to the super class\n    JClass._superClass = SuperClass;\n\n    // store references to all extending classes\n    JClass._subClasses = [];\n    SuperClass._subClasses.push(JClass);\n\n    // make this class extendable as well\n    JClass._extend = SuperClass._extend;\n\n\n    // _extends returns true if the class itself extended \"target\"\n    // in any hierarchy, e.g. every class extends \"JClass\" itself\n    JClass._extends = function(target) {\n      // this function operates recursive, so stop when the super class is our BaseClass\n      if (this._superClass == BaseClass) {\n        return false;\n      }\n\n      // success case\n      if (target == this._superClass || target == BaseClass) {\n        return true;\n      }\n\n      // continue with the next super class\n      return this._superClass._extends(target);\n    };\n\n\n    // propagate instance members directly to the created protoype,\n    // the member is either a normal member or a descriptor\n    for (var key in instanceMembers) {\n      var property = Object.getOwnPropertyDescriptor(instanceMembers, key);\n      var member   = property.value;\n\n      // descriptor flag set?\n      if (member !== null && typeof(member) == \"object\" && member.descriptor) {\n        Object.defineProperty(prototype, key, member);\n\n      // getter/setter syntax\n      } else if (!(\"value\" in property) && (\"set\" in property || \"get\" in property)) {\n        Object.defineProperty(prototype, key, property);\n\n      // normal member, simple assignment\n      } else {\n        prototype[key] = member;\n\n        // if both member and the super member are distinct functions\n        // add the super member to the member as \"_super\"\n        var superMember = superPrototype[key];\n        if (isFn(member) && isFn(superMember) && member !== superMember) {\n          member._super = superMember;\n        }\n      }\n    }\n\n\n    // propagate class members to the _members object\n    if (!options._isClassObject) {\n      // try to find the super class of the _members object \n      var ClassMembersSuperClass = SuperClass._members === undefined ?\n        BaseClass : SuperClass._members._class;\n\n      // create the actual class of the _members instance\n      // with an updated version of our options\n      var opts = extend({}, options, { _isClassObject: true });\n      var ClassMembersClass = ClassMembersSuperClass._extend(classMembers, {}, opts);\n\n      // store the actual JClass in ClassMembersClass\n      ClassMembersClass._instanceClass = JClass;\n\n      // create the _members instance\n      JClass._members = new ClassMembersClass();\n    }\n\n\n    // return the new class\n    return JClass;\n  };\n\n\n  /**\n   * Converts arbitrary protoype-style classes to our JClass definition.\n   *\n   * @param {function} cls - The class to convert.\n   * @returns {JClass}\n   */\n  BaseClass._convert = function(cls, options) {\n    // the properties consist of the class' prototype\n    var instanceMembers = cls.prototype;\n\n    // add the constructor function\n    instanceMembers.init = function() {\n      // simply create an instance of our target class\n      var origin = this._origin = BaseClass._construct(cls, arguments);\n\n      // add properties for each own property in _origin\n      Object.keys(origin).forEach(function(key) {\n        if (!origin.hasOwnProperty(key)) {\n          return;\n        }\n\n        Object.defineProperty(this, key, {\n          get: function() {\n            return origin[key];\n          }\n        });\n      }, this);\n    };\n\n    // finally, create and return our new class\n    return BaseClass._extend(instanceMembers, {}, options);\n  };\n\n\n  /**\n   * Returns an instance of a class with a list of arguments. This provides an apply-like\n   * constructor usage. Note that this approach does not work with native constructors (e.g. String\n   * or Boolean).\n   *\n   * @param {Class|JClass} cls - The class to instantiate. This may be a JClass or a prototype-based\n   *   class.\n   * @param {array} [args=[]] - Arguments to pass to the constructor.\n   * @returns {instance}\n   */\n  BaseClass._construct = function(cls, args) {\n    // empty default args\n    if (args === undefined) {\n      args = [];\n    }\n\n    // create a class wrapper that calls cls like a function\n    var Class = function() {\n      return cls.apply(this, args);\n    };\n\n    // copy the prototype\n    Class.prototype = cls.prototype;\n\n    // return a new instance\n    return new Class();\n  };\n\n\n  /**\n   * Returns a property descriptor of the super class.\n   *\n   * @param {JClass|instance} cls - A JClass or an instance of a JClass to retrieve the property\n   *   descriptor from.\n   * @param {string} prop - The name of the property descriptor to get.\n   * @returns {object}\n   */\n  BaseClass._superDescriptor = function(cls, prop) {\n    // if cls is an instance, use its class\n    if (\"_class\" in cls && cls instanceof cls._class) {\n      cls = cls._class;\n    }\n\n    // a JClass?\n    if (\"_extends\" in cls && cls._extends instanceof Function && cls._extends(this)) {\n      return Object.getOwnPropertyDescriptor(cls._superClass.prototype, prop);\n    } else {\n      return undefined;\n    }\n  };\n\n\n  /**\n   * Return the BaseClass.\n   */\n\n  return BaseClass;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jclass/index.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}
{"version":3,"sources":["../2ed1657770a5a0e81ba9.worker.js","../webpack/bootstrap 2ed1657770a5a0e81ba9","SearchWorker.js","../node_modules/trie-search/index.js","../node_modules/trie-search/src/TrieSearch.js","../node_modules/hasharray/index.js","../node_modules/hasharray/src/HashArray.js","../node_modules/jclass/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","search","query","maxResults","results","trie","__WEBPACK_IMPORTED_MODULE_0_trie_search___default","a","UNION_REDUCER","slice","postMessage","type","payload","value","__WEBPACK_IMPORTED_MODULE_0_trie_search__","indexField","idFieldOrFunction","splitOnRegEx","onmessage","message","data","start","performance","now","files","JSON","parse","map","file","id","addAll","time","toFixed","console","log","length","size","numRecords","deepLookup","obj","keys","HashArray","IS_WHITESPACE","DEFAULT_INTERNATIONALIZE_EXPAND_REGEXES","regex","alternate","String","replaceCharAt","index","replacement","this","substr","TrieSearch","keyFields","options","ignoreCase","undefined","maxCacheSize","cache","splitOnGetRegEx","min","keepAll","keepAllKey","expandRegexes","insertFullUnsplitKey","Array","root","getCache","ignoreDuplicates","add","customKeys","clearCache","k","key","isKeyArr","val","toString","toLowerCase","expandedValues","expandString","v","expandedValue","values","match","er","exec","alternateValue","push","arr","reset","cleanCache","all","remove","addFromObject","valueField","indexOf","_key_","insert","keyArr","node","shift","self","test","phrases","split","emptySplitMatch","filter","indexed","keyToArr","concat","findNode","f","_get","phrase","aggregate","ha","ret","haKeyFields","words","w","temp","intersection","reducer","accumulator","Error","matches","getId","item","maxLength","Math","max","JClass","_extend","init","callback","_map","_list","isHashArray","addOne","needsDupCheck","inst","objectAt","has","arguments","apply","addMap","other","clone","forEach","collides","complement","getAll","res","getAsArray","getUniqueRandomIntegers","count","r","floor","random","sample","image","rand","hasMultiple","removeByKey","removed","items","j","ix","key2","splice","removeAll","old","path","dup","forEachDeep","ignoreItems","sum","weightKey","average","tot","weightsTotal","callbackOrKey","defaultCallback","window","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","isFn","Function","extend","target","sources","source","defaultOptions","_isClassObject","initializing","BaseClass","_subClasses","instanceMembers","classMembers","_class","SuperClass","superPrototype","constructor","_superClass","_extends","getOwnPropertyDescriptor","member","descriptor","superMember","_super","ClassMembersSuperClass","_members","opts","ClassMembersClass","_instanceClass","_convert","cls","origin","_origin","_construct","args","Class","_superDescriptor","prop"],"mappings":"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","file":"2ed1657770a5a0e81ba9.worker.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/chip-player-js/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_trie_search__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_trie_search___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_trie_search__);\nvar trie=new __WEBPACK_IMPORTED_MODULE_0_trie_search___default.a('file',{indexField:'id',idFieldOrFunction:'id',splitOnRegEx:/[^A-Za-z0-9]/g});onmessage=function onmessage(message){var data=message.data;switch(data.type){case'load':var start=performance.now();var files=JSON.parse(data.payload).map(function(file,i){return{id:i,file:file};});trie.addAll(files);var time=(performance.now()-start).toFixed(1);console.log('Added %s items (%s tokens) to search trie in %s ms.',files.length,trie.size,time);postMessage({type:'status',payload:{numRecords:files.length}});break;case'search':search(data.payload.query,data.payload.maxResults);break;}};function search(query,maxResults){var results=trie.get(query,__WEBPACK_IMPORTED_MODULE_0_trie_search___default.a.UNION_REDUCER)||[];if(maxResults){results=results.slice(0,maxResults);}postMessage({type:'results',payload:results});}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(2);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar HashArray = __webpack_require__(3);\n\nvar MAX_CACHE_SIZE = 64;\n\nvar IS_WHITESPACE = /^[\\s]*$/;\n\nvar DEFAULT_INTERNATIONALIZE_EXPAND_REGEXES = [\n  {\n    regex: /[åäàáâãæ]/ig,\n    alternate: 'a'\n  },\n  {\n    regex: /[èéêë]/ig,\n    alternate: 'e'\n  },\n  {\n    regex: /[ìíîï]/ig,\n    alternate: 'i'\n  },\n  {\n    regex: /[òóôõö]/ig,\n    alternate: 'o'\n  },\n  {\n    regex: /[ùúûü]/ig,\n    alternate: 'u'\n  },\n  {\n    regex: /[æ]/ig,\n    alternate: 'ae'\n  }\n];\n\nString.prototype.replaceCharAt=function(index, replacement) {\n  return this.substr(0, index) + replacement + this.substr(index + replacement.length);\n};\n\nvar TrieSearch = function (keyFields, options) {\n  this.options = options || {};\n\n  // Default ignoreCase to true\n  this.options.ignoreCase = (this.options.ignoreCase === undefined) ? true : this.options.ignoreCase;\n  this.options.maxCacheSize = this.options.maxCacheSize || MAX_CACHE_SIZE;\n  this.options.cache = this.options.hasOwnProperty('cache') ? this.options.cache : true;\n  this.options.splitOnRegEx = this.options.hasOwnProperty('splitOnRegEx') ? this.options.splitOnRegEx : /\\s/g;\n  this.options.splitOnGetRegEx = this.options.hasOwnProperty('splitOnGetRegEx') ? this.options.splitOnGetRegEx : this.options.splitOnRegEx;\n  this.options.min = this.options.min || 1;\n  this.options.keepAll = this.options.hasOwnProperty('keepAll') ? this.options.keepAll : false;\n  this.options.keepAllKey = this.options.hasOwnProperty('keepAllKey') ? this.options.keepAllKey : 'id';\n  this.options.idFieldOrFunction = this.options.hasOwnProperty('idFieldOrFunction') ? this.options.idFieldOrFunction : undefined;\n  this.options.expandRegexes = this.options.expandRegexes || DEFAULT_INTERNATIONALIZE_EXPAND_REGEXES;\n  this.options.insertFullUnsplitKey = this.options.hasOwnProperty('insertFullUnsplitKey') ? this.options.insertFullUnsplitKey : false;\n\n  this.keyFields = keyFields ? (keyFields instanceof Array ? keyFields : [keyFields]) : [];\n  this.root = {};\n  this.size = 0;\n\n  if (this.options.cache) {\n    this.getCache = new HashArray('key', null, {ignoreDuplicates: true});\n  }\n};\n\nfunction deepLookup(obj, keys) {\n  return keys.length === 1 ? obj[keys[0]] : deepLookup(obj[keys[0]], keys.slice(1, keys.length));\n}\n\nTrieSearch.prototype = {\n  add: function (obj, customKeys) {\n    if (this.options.cache)\n      this.clearCache();\n\n    // Someone might have called add via an array forEach where the second param is a number\n    if (typeof customKeys === 'number') {\n      customKeys = undefined;\n    }\n\n    var keyFields = customKeys || this.keyFields;\n\n    for (var k in keyFields)\n    {\n      var key = keyFields[k],\n        isKeyArr = key instanceof Array,\n        val = isKeyArr ? deepLookup(obj, key) : obj[key];\n\n      if (!val) continue;\n\n      val = val.toString();\n      val = this.options.ignoreCase ? val.toLowerCase() : val;\n\n      var expandedValues = this.expandString(val);\n\n      for (var v = 0; v < expandedValues.length; v++) {\n        var expandedValue = expandedValues[v];\n\n        this.map(expandedValue, obj);\n      }\n    }\n  },\n  /**\n   * By default using the options.expandRegexes, given a string like 'ö är bra', this will expand it to:\n   *\n   * ['ö är bra', 'o är bra', 'ö ar bra', 'o ar bra']\n   *\n   * By default this was built to allow for internationalization, but it could be also be expanded to\n   * allow for word alternates, etc. like spelling alternates ('teh' and 'the').\n   *\n   * This is used for insertion! This should not be used for lookup since if a person explicitly types\n   * 'ä' they probably do not want to see all results for 'a'.\n   *\n   * @param value The string to find alternates for.\n   * @returns {Array} Always returns an array even if no matches.\n   */\n  expandString: function(value) {\n    var values = [value];\n\n    if (this.options.expandRegexes && this.options.expandRegexes.length) {\n      for (var i = 0; i < this.options.expandRegexes.length; i++) {\n        var er = this.options.expandRegexes[i];\n        var match;\n\n        while((match = er.regex.exec(value)) !== null) {\n          var alternateValue = value.replaceCharAt(match.index, er.alternate);\n          values.push(alternateValue);\n        }\n      }\n    }\n\n    return values;\n  },\n  addAll: function (arr, customKeys) {\n    for (var i = 0; i < arr.length; i++)\n      this.add(arr[i], customKeys);\n  },\n  reset: function () {\n    this.root = {};\n    this.size = 0;\n  },\n  clearCache: function () {\n    // if (this.getCache && !this.getCache._list.length) {\n    //   return;\n    // }\n    this.getCache = new HashArray('key', null, {ignoreDuplicates: true});\n  },\n  cleanCache: function () {\n    while (this.getCache.all.length > this.options.maxCacheSize)\n      this.getCache.remove(this.getCache.all[0]);\n  },\n  addFromObject: function (obj, valueField) {\n    if (this.options.cache)\n      this.clearCache();\n\n    valueField = valueField || 'value';\n\n    if (this.keyFields.indexOf('_key_') == -1)\n      this.keyFields.push('_key_');\n\n    for (var key in obj)\n    {\n      var o = {_key_: key};\n      o[valueField] = obj[key];\n      this.add(o);\n    }\n  },\n  map: function (key, value) {\n    if (this.options.splitOnRegEx && this.options.splitOnRegEx.test(key))\n    {\n      var phrases = key.split(this.options.splitOnRegEx);\n      var emptySplitMatch = phrases.filter(function(p) { return IS_WHITESPACE.test(p); });\n      var selfMatch = phrases.filter(function(p) { return p === key; });\n      var selfIsOnlyMatch = selfMatch.length + emptySplitMatch.length === phrases.length;\n\n      // There is an edge case that a RegEx with a positive lookeahed like:\n      //  /?=[A-Z]/ // Split on capital letters for a camelcase sentence\n      // Will then match again when we call map, creating an infinite stack loop.\n      if (!selfIsOnlyMatch) {\n        for (var i = 0, l = phrases.length; i < l; i++) {\n          if (!IS_WHITESPACE.test(phrases[i])) {\n            this.map(phrases[i], value);\n          }\n        }\n\n        if (!this.options.insertFullUnsplitKey) {\n          return;\n        }\n      }\n    }\n\n    if (this.options.cache)\n      this.clearCache();\n\n    if (this.options.keepAll) {\n      this.indexed = this.indexed || new HashArray([this.options.keepAllKey], null, {ignoreDuplicates: true});\n      this.indexed.add(value);\n    }\n\n    if (this.options.ignoreCase) {\n      key = key.toLowerCase();\n    }\n\n    var keyArr = this.keyToArr(key),\n      self = this;\n\n    insert(keyArr, value, this.root);\n\n    function insert(keyArr, value, node) {\n      if (keyArr.length == 0)\n      {\n        node['value'] = node['value'] || [];\n        node['value'].push(value);\n        return; \n      }\n\n      var k = keyArr.shift();\n\n      if (!node[k])\n        self.size++;\n\n      node[k] = node[k] || {};\n\n      insert(keyArr, value, node[k])\n    }\n  },\n  keyToArr: function (key) {\n    var keyArr;\n      \n    if (this.options.min && this.options.min > 1)\n    {\n      if (key.length < this.options.min)\n        return [];\n\n      keyArr = [key.substr(0, this.options.min)];\n      keyArr = keyArr.concat(key.substr(this.options.min).split(''));\n    }\n    else keyArr = key.split('');\n\n    return keyArr;\n  },\n  findNode: function (key) {\n    if (this.options.min > 0 && key.length < this.options.min)\n      return [];\n\n    return f(this.keyToArr(key), this.root);\n\n    function f(keyArr, node) {\n      if (!node) return undefined;\n      if (keyArr.length == 0) return node;\n\n      var k = keyArr.shift();\n      return f(keyArr, node[k]);\n    }\n  },\n  _get: function (phrase) {\n    phrase = this.options.ignoreCase ? phrase.toLowerCase() : phrase;\n    \n    var c, node;\n    if (this.options.cache && (c = this.getCache.get(phrase)))\n      return c.value;\n\n    var ret = undefined,\n      haKeyFields = this.options.indexField ? [this.options.indexField] : this.keyFields,\n      words = this.options.splitOnGetRegEx ? phrase.split(this.options.splitOnGetRegEx) : [phrase];\n\n    for (var w = 0, l = words.length; w < l; w++)\n    {\n      if (this.options.min && words[w].length < this.options.min)\n        continue;\n\n      var temp = new HashArray(haKeyFields, null, {ignoreDuplicates: true});\n\n      if (node = this.findNode(words[w]))\n        aggregate(node, temp);\n\n      ret = ret ? ret.intersection(temp) : temp;\n    }\n    \n    var v = ret ? ret.all : [];\n\n    if (this.options.cache)\n    {\n      this.getCache.add({key: phrase, value: v});\n      this.cleanCache();\n    }\n\n    return v;\n    \n    function aggregate(node, ha) {\n      if (node.value && node.value.length)\n        ha.addAll(node.value);\n\n      for (var k in node)\n        if (k != 'value')\n          aggregate(node[k], ha);\n    }\n  },\n  get: function (phrases, reducer) {\n    var self = this,\n      haKeyFields = this.options.indexField ? [this.options.indexField] : this.keyFields,\n      ret = undefined,\n      accumulator = undefined;\n\n    if (reducer && !this.options.idFieldOrFunction) {\n      throw new Error('To use the accumulator, you must specify and idFieldOrFunction');\n    }\n\n    phrases = (phrases instanceof Array) ? phrases : [phrases];\n\n    for (var i = 0, l = phrases.length; i < l; i++)\n    {\n      var matches = this._get(phrases[i]);\n\n      if (reducer) {\n        accumulator = reducer(accumulator, phrases[i], matches, this);\n      } else {\n        ret = ret ? ret.addAll(matches) : new HashArray(haKeyFields, null, {ignoreDuplicates: true}).addAll(matches);\n      }\n    }\n\n    if (!reducer) {\n      return ret.all;\n    }\n\n    return accumulator;\n  },\n  getId: function (item) {\n    return typeof this.options.idFieldOrFunction === 'function' ? this.options.idFieldOrFunction(item) : item[this.options.idFieldOrFunction];\n  }\n};\n\nTrieSearch.UNION_REDUCER = function(accumulator, phrase, matches, trie) {\n  if (accumulator === undefined) {\n    return matches;\n  }\n\n  var map = {}, i, id;\n  var maxLength = Math.max(accumulator.length, matches.length);\n  var results = [];\n  var l = 0;\n\n  // One loop, O(N) for max length of accumulator or matches.\n  for (i = 0; i < maxLength; i++) {\n    if (i < accumulator.length) {\n      id = trie.getId(accumulator[i]);\n      map[id] = map[id] ? map[id] : 0;\n      map[id]++;\n\n      if (map[id] === 2) {\n        results[l++] = accumulator[i];\n      }\n    }\n\n    if (i < matches.length) {\n      id = trie.getId(matches[i]);\n      map[id] = map[id] ? map[id] : 0;\n      map[id]++;\n\n      if (map[id] === 2) {\n        results[l++] = matches[i];\n      }\n    }\n  }\n\n  return results;\n};\n\nmodule.exports = TrieSearch;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(4);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*===========================================================================*\\\n * Requires\n\\*===========================================================================*/\nvar JClass = __webpack_require__(5);\n\n/*===========================================================================*\\\n * HashArray\n\\*===========================================================================*/\nvar HashArray = JClass._extend({\n  //-----------------------------------\n  // Constructor\n  //-----------------------------------\n  init: function(keyFields, callback, options) {\n    keyFields = keyFields instanceof Array ? keyFields : [keyFields];\n\n    this._map = {};\n    this._list = [];\n    this.callback = callback;\n\n    this.keyFields = keyFields;\n\n    this.isHashArray = true;\n    \n    this.options = options || {\n      ignoreDuplicates: false\n    };\n\n    if (callback) {\n      callback('construct');\n    }\n  },\n  //-----------------------------------\n  // add()\n  //-----------------------------------\n  addOne: function (obj) {\n    var needsDupCheck = false;\n    for (var key in this.keyFields) {\n      key = this.keyFields[key];\n      var inst = this.objectAt(obj, key);\n      if (inst) {\n        if (this.has(inst)) {\n          if (this.options.ignoreDuplicates)\n            return;\n          if (this._map[inst].indexOf(obj) != -1) {\n            // Cannot add the same item twice\n            needsDupCheck = true;\n            continue;\n          }\n          this._map[inst].push(obj);\n        }\n        else this._map[inst] = [obj];\n      }\n    }\n\n    if (!needsDupCheck || this._list.indexOf(obj) == -1)\n      this._list.push(obj);\n  },\n  add: function() {\n    for (var i = 0; i < arguments.length; i++) {\n      this.addOne(arguments[i]);\n    }\n\n    if (this.callback) {\n      this.callback('add', Array.prototype.slice.call(arguments, 0));\n    }\n    \n    return this;\n  },\n  addAll: function (arr) {\n    if (arr.length < 100)\n      this.add.apply(this, arr);\n    else {\n      for (var i = 0; i < arr.length; i++)\n        this.add(arr[i]);\n    }\n    \n    return this;\n  },\n  addMap: function(key, obj) {\n    this._map[key] = obj;\n    if (this.callback) {\n      this.callback('addMap', {\n        key: key,\n        obj: obj\n      });\n    }\n    \n    return this;\n  },\n  //-----------------------------------\n  // Intersection, union, etc.\n  //-----------------------------------\n  /**\n   * Returns a new HashArray that contains the intersection between this (A) and the hasharray passed in (B). Returns A ^ B.\n   */\n  intersection: function (other) {\n    var self = this;\n\n    if (!other || !other.isHashArray)\n      throw Error('Cannot HashArray.intersection() on a non-hasharray object. You passed in: ', other);\n\n    var ret = this.clone(null, true),\n      allItems = this.clone(null, true).addAll(this.all.concat(other.all));\n\n    allItems.all.forEach(function (item) {\n      if (self.collides(item) && other.collides(item))\n        ret.add(item);\n    });\n\n    return ret;\n  },\n  /**\n   * Returns a new HashArray that contains the complement (difference) between this hash array (A) and the hasharray passed in (B). Returns A - B.\n   */\n  complement: function (other) {\n    var self = this;\n\n    if (!other || !other.isHashArray)\n      throw Error('Cannot HashArray.complement() on a non-hasharray object. You passed in: ', other);\n\n    var ret = this.clone(null, true);\n\n    this.all.forEach(function (item) {\n      if (!other.collides(item))\n        ret.add(item);\n    });\n\n    return ret;\n  },\n  //-----------------------------------\n  // Retrieval\n  //-----------------------------------\n  get: function(key) {\n    return (!(this._map[key] instanceof Array) || this._map[key].length != 1) ? this._map[key] : this._map[key][0];\n  },\n  getAll: function(keys) {\n    keys = keys instanceof Array ? keys : [keys];\n\n    if (keys[0] == '*')\n      return this.all;\n\n    var res = new HashArray(this.keyFields);\n    for (var key in keys)\n      res.add.apply(res, this.getAsArray(keys[key]));\n\n    return res.all;\n  },\n  getAsArray: function(key) {\n    return this._map[key] || [];\n  },\n  getUniqueRandomIntegers: function (count, min, max) {\n    var res = [], map = {};\n\n    count = Math.min(Math.max(max - min, 1), count);\n    \n    while (res.length < count)\n    {\n      var r = Math.floor(min + (Math.random() * (max + 1)));\n      if (map[r]) continue;\n      map[r] = true;\n      res.push(r);\n    }\n\n    return res;\n  },\n  sample: function (count, keys) {\n    // http://en.wikipedia.org/wiki/Image_(mathematics)\n    var image = this.all,\n      ixs = {},\n      res = [];\n\n    if (keys)\n      image = this.getAll(keys);\n\n    var rand = this.getUniqueRandomIntegers(count, 0, image.length - 1);\n\n    for (var i = 0; i < rand.length; i++)\n      res.push(image[rand[i]]);\n\n    return res;\n  },\n  //-----------------------------------\n  // Peeking\n  //-----------------------------------\n  has: function(key) {\n    return this._map.hasOwnProperty(key);\n  },\n  collides: function (item) {\n    for (var k in this.keyFields)\n      if (this.has(this.objectAt(item, this.keyFields[k])))\n        return true;\n    \n    return false;\n  },\n  hasMultiple: function(key) {\n    return this._map[key] instanceof Array;\n  },\n  //-----------------------------------\n  // Removal\n  //-----------------------------------\n  removeByKey: function() {\n    var removed = [];\n    for (var i = 0; i < arguments.length; i++) {\n      var key = arguments[i];\n      var items = this._map[key].concat();\n      if (items) {\n        removed = removed.concat(items);\n        for (var j in items) {\n          var item = items[j];\n          for (var ix in this.keyFields) {\n            var key2 = this.objectAt(item, this.keyFields[ix]);\n            if (key2 && this.has(key2)) {\n              var ix = this._map[key2].indexOf(item);\n              if (ix != -1) {\n                this._map[key2].splice(ix, 1);\n              }\n\n              if (this._map[key2].length == 0)\n                delete this._map[key2];\n            }\n          }\n\n          this._list.splice(this._list.indexOf(item), 1);\n        }\n      }\n      delete this._map[key];\n    }\n\n    if (this.callback) {\n      this.callback('removeByKey', removed);\n    }\n    \n    return this;\n  },\n  remove: function() {\n    for (var i = 0; i < arguments.length; i++) {\n      var item = arguments[i];\n      for (var ix in this.keyFields) {\n        var key = this.objectAt(item, this.keyFields[ix]);\n        if (key) {\n          var ix = this._map[key].indexOf(item);\n          if (ix != -1)\n            this._map[key].splice(ix, 1);\n          else\n            throw new Error('HashArray: attempting to remove an object that was never added!' + key);\n\n          if (this._map[key].length == 0)\n            delete this._map[key];\n        }\n      }\n\n      var ix = this._list.indexOf(item);\n\n      if (ix != -1)\n        this._list.splice(ix, 1);\n      else\n        throw new Error('HashArray: attempting to remove an object that was never added!' + key);\n    }\n\n    if (this.callback) {\n      this.callback('remove', arguments);\n    }\n    \n    return this;\n  },\n  removeAll: function() {\n    var old = this._list.concat();\n    this._map = {};\n    this._list = [];\n\n    if (this.callback) {\n      this.callback('remove', old);\n    }\n    \n    return this;\n  },\n  //-----------------------------------\n  // Utility\n  //-----------------------------------\n  objectAt: function(obj, path) {\n    if (typeof path === 'string') {\n      return obj[path];\n    }\n\n    var dup = path.concat();\n    // else assume array.\n    while (dup.length && obj) {\n      obj = obj[dup.shift()];\n    }\n\n    return obj;\n  },\n  //-----------------------------------\n  // Iteration\n  //-----------------------------------\n  forEach: function(keys, callback) {\n    keys = keys instanceof Array ? keys : [keys];\n\n    var objs = this.getAll(keys);\n\n    objs.forEach(callback);\n    \n    return this;\n  },\n  forEachDeep: function(keys, key, callback) {\n    keys = keys instanceof Array ? keys : [keys];\n\n    var self = this,\n      objs = this.getAll(keys);\n\n    objs.forEach(function (item) {\n      callback(self.objectAt(item, key), item);\n    });\n    \n    return this;\n  },\n  //-----------------------------------\n  // Cloning\n  //-----------------------------------\n  clone: function(callback, ignoreItems) {\n    var n = new HashArray(this.keyFields.concat(), callback ? callback : this.callback);\n    if (!ignoreItems)\n      n.add.apply(n, this.all.concat());\n    return n;\n  },\n  //-----------------------------------\n  // Mathematical\n  //-----------------------------------\n  sum: function(keys, key, weightKey) {\n    var self = this,\n      ret = 0;\n    this.forEachDeep(keys, key, function (value, item) {\n      if (weightKey !== undefined)\n        value *= self.objectAt(item, weightKey);\n\n      ret += value;\n    });\n    return ret;\n  },\n  average: function(keys, key, weightKey) {\n    var ret = 0,\n      tot = 0,\n      weightsTotal = 0,\n      self = this;\n\n    if (weightKey !== undefined)\n      this.forEachDeep(keys, weightKey, function (value) {\n        weightsTotal += value;\n      })\n\n    this.forEachDeep(keys, key, function (value, item) {\n      if (weightKey !== undefined)\n        value *= (self.objectAt(item, weightKey) / weightsTotal);\n\n      ret += value;\n      tot++;\n    });\n\n    return weightKey !== undefined ? ret : ret / tot;\n  },\n  //-----------------------------------\n  // Filtering\n  //-----------------------------------\n  filter: function (keys, callbackOrKey) {\n    var self = this;\n    \n    var callback = (typeof(callbackOrKey) == 'function') ? callbackOrKey : defaultCallback;\n\n    var ha = new HashArray(this.keyFields);\n    ha.addAll(this.getAll(keys).filter(callback));\n    return ha;\n    \n    function defaultCallback(item) {\n      var val = self.objectAt(item, callbackOrKey);\n      return val !== undefined && val !== false;\n    }\n  }\n});\n\n//-----------------------------------\n// Operators\n//-----------------------------------\nObject.defineProperty(HashArray.prototype, 'all', {\n  get: function () {\n    return this._list;\n  }\n});\n\nObject.defineProperty(HashArray.prototype, 'map', {\n  get: function () {\n    return this._map;\n  }\n});\n\nmodule.exports = HashArray;\n\n//-----------------------------------\n// Browser\n//-----------------------------------\nif (typeof window !== 'undefined')\n  window.HashArray = HashArray;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * jclass v1.1.9\n * https://github.com/riga/jclass\n *\n * Marcel Rieger, 2015\n * MIT licensed, http://www.opensource.org/licenses/mit-license\n */\n\n(function(factory) {\n\n  /**\n   * Make jclass available in any context.\n   */\n\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n  } else if (typeof(exports) == \"object\") {\n    // CommonJS\n    exports = factory();\n\n    if (typeof(module) == \"object\") {\n      // NodeJS\n      module.exports = exports;\n    }\n\n  } else if (window) {\n    // Browser\n    window.JClass = factory();\n\n  } else if (typeof(console) == \"object\" && console.error instanceof Function) {\n    // error case\n    console.error(\"cannot determine environment\");\n  }\n\n})(function() {\n\n  /**\n   * Helper functions.\n   */\n\n  /**\n   * Checks whether a passed object is a function.\n   *\n   * @param obj - The object to check.\n   * @returns {boolean}\n   */\n  var isFn = function(obj) {\n    return obj instanceof Function;\n  };\n\n  /**\n   * Extends a target object by one or more source objects with shallow key comparisons. Note that\n   * the extension is done in-place.\n   *\n   * @param {object} target - The target object to extend.\n   * @param {...object} source - Source objects.\n   * @returns {object} The extended object.\n   */\n  var extend = function(target) {\n    var sources = Array.prototype.slice.call(arguments, 1);\n\n    // loop through all sources\n    for (var i in sources) {\n      var source = sources[i];\n\n      // object check\n      if (typeof(source) != \"object\") {\n        continue;\n      }\n\n      // loop through all source attributes\n      for (var key in source) {\n        target[key] = source[key];\n      }\n    }\n\n    return target;\n  };\n\n\n  /**\n   * Default options.\n   */\n\n  var defaultOptions = {\n    // internal object for indicating that class objects don't have a class object themselves,\n    // may not be used by users\n    _isClassObject: false\n  };\n\n\n  /**\n   * Flags.\n   */\n\n  // flag to distinguish between prototype and class instantiation \n  var initializing = false;\n\n\n  /**\n   * Base class definition.\n   */\n\n  // empty BaseClass implementation\n  var BaseClass = function(){};\n\n  // add the _subClasses entry\n  BaseClass._subClasses = [];\n\n  // empty init method\n  BaseClass.prototype.init = function(){};\n\n\n  /**\n   * Extend mechanism. Returns a derived class.\n   *\n   * @param {object} instanceMembers - Members that will be owned by instances.\n   * @param {object} classMembers - Members that will be owned by the class itself.\n   * @returns {JClass}\n   */\n  BaseClass._extend = function(instanceMembers, classMembers, options) {\n\n    // default arguments\n    if (instanceMembers === undefined) {\n      instanceMembers = {};\n    }\n    if (classMembers === undefined) {\n      classMembers = {};\n    }\n    if (options === undefined) {\n      options = {};\n    }\n\n    // mixin default options\n    options = extend({}, defaultOptions, options);\n\n\n    // sub class dummy constructor\n    var JClass = function() {\n      // nothing happens here when we are initializing\n      if (initializing) {\n        return;\n      }\n\n      // store a reference to the class itself\n      this._class = JClass;\n\n      // all construction is actually done in the init method\n      if (this.init instanceof Function) {\n        this.init.apply(this, arguments);\n      }\n    };\n\n\n    // alias for readability\n    var SuperClass = this;\n\n    // create an instance of the super class via new\n    // the flag sandwich prevents a call to the init method\n    initializing = true;\n    var prototype = new SuperClass();\n    initializing = false;\n\n    // get the prototype of the super class\n    var superPrototype = SuperClass.prototype;\n\n    // the instance of the super class is our new prototype\n    JClass.prototype = prototype;\n\n    // enforce the constructor to be what we expect\n    // calls to the constructor will invoke the init method (see above)\n    JClass.prototype.constructor = JClass;\n\n    // store a reference to the super class\n    JClass._superClass = SuperClass;\n\n    // store references to all extending classes\n    JClass._subClasses = [];\n    SuperClass._subClasses.push(JClass);\n\n    // make this class extendable as well\n    JClass._extend = SuperClass._extend;\n\n\n    // _extends returns true if the class itself extended \"target\"\n    // in any hierarchy, e.g. every class extends \"JClass\" itself\n    JClass._extends = function(target) {\n      // this function operates recursive, so stop when the super class is our BaseClass\n      if (this._superClass == BaseClass) {\n        return false;\n      }\n\n      // success case\n      if (target == this._superClass || target == BaseClass) {\n        return true;\n      }\n\n      // continue with the next super class\n      return this._superClass._extends(target);\n    };\n\n\n    // propagate instance members directly to the created protoype,\n    // the member is either a normal member or a descriptor\n    for (var key in instanceMembers) {\n      var property = Object.getOwnPropertyDescriptor(instanceMembers, key);\n      var member   = property.value;\n\n      // descriptor flag set?\n      if (member !== null && typeof(member) == \"object\" && member.descriptor) {\n        Object.defineProperty(prototype, key, member);\n\n      // getter/setter syntax\n      } else if (!(\"value\" in property) && (\"set\" in property || \"get\" in property)) {\n        Object.defineProperty(prototype, key, property);\n\n      // normal member, simple assignment\n      } else {\n        prototype[key] = member;\n\n        // if both member and the super member are distinct functions\n        // add the super member to the member as \"_super\"\n        var superMember = superPrototype[key];\n        if (isFn(member) && isFn(superMember) && member !== superMember) {\n          member._super = superMember;\n        }\n      }\n    }\n\n\n    // propagate class members to the _members object\n    if (!options._isClassObject) {\n      // try to find the super class of the _members object \n      var ClassMembersSuperClass = SuperClass._members === undefined ?\n        BaseClass : SuperClass._members._class;\n\n      // create the actual class of the _members instance\n      // with an updated version of our options\n      var opts = extend({}, options, { _isClassObject: true });\n      var ClassMembersClass = ClassMembersSuperClass._extend(classMembers, {}, opts);\n\n      // store the actual JClass in ClassMembersClass\n      ClassMembersClass._instanceClass = JClass;\n\n      // create the _members instance\n      JClass._members = new ClassMembersClass();\n    }\n\n\n    // return the new class\n    return JClass;\n  };\n\n\n  /**\n   * Converts arbitrary protoype-style classes to our JClass definition.\n   *\n   * @param {function} cls - The class to convert.\n   * @returns {JClass}\n   */\n  BaseClass._convert = function(cls, options) {\n    // the properties consist of the class' prototype\n    var instanceMembers = cls.prototype;\n\n    // add the constructor function\n    instanceMembers.init = function() {\n      // simply create an instance of our target class\n      var origin = this._origin = BaseClass._construct(cls, arguments);\n\n      // add properties for each own property in _origin\n      Object.keys(origin).forEach(function(key) {\n        if (!origin.hasOwnProperty(key)) {\n          return;\n        }\n\n        Object.defineProperty(this, key, {\n          get: function() {\n            return origin[key];\n          }\n        });\n      }, this);\n    };\n\n    // finally, create and return our new class\n    return BaseClass._extend(instanceMembers, {}, options);\n  };\n\n\n  /**\n   * Returns an instance of a class with a list of arguments. This provides an apply-like\n   * constructor usage. Note that this approach does not work with native constructors (e.g. String\n   * or Boolean).\n   *\n   * @param {Class|JClass} cls - The class to instantiate. This may be a JClass or a prototype-based\n   *   class.\n   * @param {array} [args=[]] - Arguments to pass to the constructor.\n   * @returns {instance}\n   */\n  BaseClass._construct = function(cls, args) {\n    // empty default args\n    if (args === undefined) {\n      args = [];\n    }\n\n    // create a class wrapper that calls cls like a function\n    var Class = function() {\n      return cls.apply(this, args);\n    };\n\n    // copy the prototype\n    Class.prototype = cls.prototype;\n\n    // return a new instance\n    return new Class();\n  };\n\n\n  /**\n   * Returns a property descriptor of the super class.\n   *\n   * @param {JClass|instance} cls - A JClass or an instance of a JClass to retrieve the property\n   *   descriptor from.\n   * @param {string} prop - The name of the property descriptor to get.\n   * @returns {object}\n   */\n  BaseClass._superDescriptor = function(cls, prop) {\n    // if cls is an instance, use its class\n    if (\"_class\" in cls && cls instanceof cls._class) {\n      cls = cls._class;\n    }\n\n    // a JClass?\n    if (\"_extends\" in cls && cls._extends instanceof Function && cls._extends(this)) {\n      return Object.getOwnPropertyDescriptor(cls._superClass.prototype, prop);\n    } else {\n      return undefined;\n    }\n  };\n\n\n  /**\n   * Return the BaseClass.\n   */\n\n  return BaseClass;\n});\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// 2ed1657770a5a0e81ba9.worker.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/chip-player-js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2ed1657770a5a0e81ba9","import TrieSearch from 'trie-search';\n\nconst trie = new TrieSearch('file', {\n  indexField: 'id',\n  idFieldOrFunction: 'id',\n  splitOnRegEx: /[^A-Za-z0-9]/g,\n});\n\nonmessage = (message) => {\n  const data = message.data;\n  switch (data.type) {\n    case 'load':\n      const start = performance.now();\n      const files = JSON.parse(data.payload).map((file, i) => ({id: i, file: file}));\n      trie.addAll(files);\n      const time = (performance.now() - start).toFixed(1);\n      console.log('Added %s items (%s tokens) to search trie in %s ms.', files.length, trie.size, time);\n      postMessage({\n        type: 'status',\n        payload: {numRecords: files.length}\n      });\n      break;\n    case 'search':\n      search(data.payload.query, data.payload.maxResults);\n      break;\n  }\n};\n\nfunction search(query, maxResults) {\n  let results = trie.get(query, TrieSearch.UNION_REDUCER) || [];\n  if (maxResults) {\n    results = results.slice(0, maxResults);\n  }\n  postMessage({\n    type: 'results',\n    payload: results\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/SearchWorker.js","module.exports = require('./src/TrieSearch');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/trie-search/index.js\n// module id = 1\n// module chunks = 0","var HashArray = require('hasharray');\n\nvar MAX_CACHE_SIZE = 64;\n\nvar IS_WHITESPACE = /^[\\s]*$/;\n\nvar DEFAULT_INTERNATIONALIZE_EXPAND_REGEXES = [\n  {\n    regex: /[åäàáâãæ]/ig,\n    alternate: 'a'\n  },\n  {\n    regex: /[èéêë]/ig,\n    alternate: 'e'\n  },\n  {\n    regex: /[ìíîï]/ig,\n    alternate: 'i'\n  },\n  {\n    regex: /[òóôõö]/ig,\n    alternate: 'o'\n  },\n  {\n    regex: /[ùúûü]/ig,\n    alternate: 'u'\n  },\n  {\n    regex: /[æ]/ig,\n    alternate: 'ae'\n  }\n];\n\nString.prototype.replaceCharAt=function(index, replacement) {\n  return this.substr(0, index) + replacement + this.substr(index + replacement.length);\n};\n\nvar TrieSearch = function (keyFields, options) {\n  this.options = options || {};\n\n  // Default ignoreCase to true\n  this.options.ignoreCase = (this.options.ignoreCase === undefined) ? true : this.options.ignoreCase;\n  this.options.maxCacheSize = this.options.maxCacheSize || MAX_CACHE_SIZE;\n  this.options.cache = this.options.hasOwnProperty('cache') ? this.options.cache : true;\n  this.options.splitOnRegEx = this.options.hasOwnProperty('splitOnRegEx') ? this.options.splitOnRegEx : /\\s/g;\n  this.options.splitOnGetRegEx = this.options.hasOwnProperty('splitOnGetRegEx') ? this.options.splitOnGetRegEx : this.options.splitOnRegEx;\n  this.options.min = this.options.min || 1;\n  this.options.keepAll = this.options.hasOwnProperty('keepAll') ? this.options.keepAll : false;\n  this.options.keepAllKey = this.options.hasOwnProperty('keepAllKey') ? this.options.keepAllKey : 'id';\n  this.options.idFieldOrFunction = this.options.hasOwnProperty('idFieldOrFunction') ? this.options.idFieldOrFunction : undefined;\n  this.options.expandRegexes = this.options.expandRegexes || DEFAULT_INTERNATIONALIZE_EXPAND_REGEXES;\n  this.options.insertFullUnsplitKey = this.options.hasOwnProperty('insertFullUnsplitKey') ? this.options.insertFullUnsplitKey : false;\n\n  this.keyFields = keyFields ? (keyFields instanceof Array ? keyFields : [keyFields]) : [];\n  this.root = {};\n  this.size = 0;\n\n  if (this.options.cache) {\n    this.getCache = new HashArray('key', null, {ignoreDuplicates: true});\n  }\n};\n\nfunction deepLookup(obj, keys) {\n  return keys.length === 1 ? obj[keys[0]] : deepLookup(obj[keys[0]], keys.slice(1, keys.length));\n}\n\nTrieSearch.prototype = {\n  add: function (obj, customKeys) {\n    if (this.options.cache)\n      this.clearCache();\n\n    // Someone might have called add via an array forEach where the second param is a number\n    if (typeof customKeys === 'number') {\n      customKeys = undefined;\n    }\n\n    var keyFields = customKeys || this.keyFields;\n\n    for (var k in keyFields)\n    {\n      var key = keyFields[k],\n        isKeyArr = key instanceof Array,\n        val = isKeyArr ? deepLookup(obj, key) : obj[key];\n\n      if (!val) continue;\n\n      val = val.toString();\n      val = this.options.ignoreCase ? val.toLowerCase() : val;\n\n      var expandedValues = this.expandString(val);\n\n      for (var v = 0; v < expandedValues.length; v++) {\n        var expandedValue = expandedValues[v];\n\n        this.map(expandedValue, obj);\n      }\n    }\n  },\n  /**\n   * By default using the options.expandRegexes, given a string like 'ö är bra', this will expand it to:\n   *\n   * ['ö är bra', 'o är bra', 'ö ar bra', 'o ar bra']\n   *\n   * By default this was built to allow for internationalization, but it could be also be expanded to\n   * allow for word alternates, etc. like spelling alternates ('teh' and 'the').\n   *\n   * This is used for insertion! This should not be used for lookup since if a person explicitly types\n   * 'ä' they probably do not want to see all results for 'a'.\n   *\n   * @param value The string to find alternates for.\n   * @returns {Array} Always returns an array even if no matches.\n   */\n  expandString: function(value) {\n    var values = [value];\n\n    if (this.options.expandRegexes && this.options.expandRegexes.length) {\n      for (var i = 0; i < this.options.expandRegexes.length; i++) {\n        var er = this.options.expandRegexes[i];\n        var match;\n\n        while((match = er.regex.exec(value)) !== null) {\n          var alternateValue = value.replaceCharAt(match.index, er.alternate);\n          values.push(alternateValue);\n        }\n      }\n    }\n\n    return values;\n  },\n  addAll: function (arr, customKeys) {\n    for (var i = 0; i < arr.length; i++)\n      this.add(arr[i], customKeys);\n  },\n  reset: function () {\n    this.root = {};\n    this.size = 0;\n  },\n  clearCache: function () {\n    // if (this.getCache && !this.getCache._list.length) {\n    //   return;\n    // }\n    this.getCache = new HashArray('key', null, {ignoreDuplicates: true});\n  },\n  cleanCache: function () {\n    while (this.getCache.all.length > this.options.maxCacheSize)\n      this.getCache.remove(this.getCache.all[0]);\n  },\n  addFromObject: function (obj, valueField) {\n    if (this.options.cache)\n      this.clearCache();\n\n    valueField = valueField || 'value';\n\n    if (this.keyFields.indexOf('_key_') == -1)\n      this.keyFields.push('_key_');\n\n    for (var key in obj)\n    {\n      var o = {_key_: key};\n      o[valueField] = obj[key];\n      this.add(o);\n    }\n  },\n  map: function (key, value) {\n    if (this.options.splitOnRegEx && this.options.splitOnRegEx.test(key))\n    {\n      var phrases = key.split(this.options.splitOnRegEx);\n      var emptySplitMatch = phrases.filter(function(p) { return IS_WHITESPACE.test(p); });\n      var selfMatch = phrases.filter(function(p) { return p === key; });\n      var selfIsOnlyMatch = selfMatch.length + emptySplitMatch.length === phrases.length;\n\n      // There is an edge case that a RegEx with a positive lookeahed like:\n      //  /?=[A-Z]/ // Split on capital letters for a camelcase sentence\n      // Will then match again when we call map, creating an infinite stack loop.\n      if (!selfIsOnlyMatch) {\n        for (var i = 0, l = phrases.length; i < l; i++) {\n          if (!IS_WHITESPACE.test(phrases[i])) {\n            this.map(phrases[i], value);\n          }\n        }\n\n        if (!this.options.insertFullUnsplitKey) {\n          return;\n        }\n      }\n    }\n\n    if (this.options.cache)\n      this.clearCache();\n\n    if (this.options.keepAll) {\n      this.indexed = this.indexed || new HashArray([this.options.keepAllKey], null, {ignoreDuplicates: true});\n      this.indexed.add(value);\n    }\n\n    if (this.options.ignoreCase) {\n      key = key.toLowerCase();\n    }\n\n    var keyArr = this.keyToArr(key),\n      self = this;\n\n    insert(keyArr, value, this.root);\n\n    function insert(keyArr, value, node) {\n      if (keyArr.length == 0)\n      {\n        node['value'] = node['value'] || [];\n        node['value'].push(value);\n        return; \n      }\n\n      var k = keyArr.shift();\n\n      if (!node[k])\n        self.size++;\n\n      node[k] = node[k] || {};\n\n      insert(keyArr, value, node[k])\n    }\n  },\n  keyToArr: function (key) {\n    var keyArr;\n      \n    if (this.options.min && this.options.min > 1)\n    {\n      if (key.length < this.options.min)\n        return [];\n\n      keyArr = [key.substr(0, this.options.min)];\n      keyArr = keyArr.concat(key.substr(this.options.min).split(''));\n    }\n    else keyArr = key.split('');\n\n    return keyArr;\n  },\n  findNode: function (key) {\n    if (this.options.min > 0 && key.length < this.options.min)\n      return [];\n\n    return f(this.keyToArr(key), this.root);\n\n    function f(keyArr, node) {\n      if (!node) return undefined;\n      if (keyArr.length == 0) return node;\n\n      var k = keyArr.shift();\n      return f(keyArr, node[k]);\n    }\n  },\n  _get: function (phrase) {\n    phrase = this.options.ignoreCase ? phrase.toLowerCase() : phrase;\n    \n    var c, node;\n    if (this.options.cache && (c = this.getCache.get(phrase)))\n      return c.value;\n\n    var ret = undefined,\n      haKeyFields = this.options.indexField ? [this.options.indexField] : this.keyFields,\n      words = this.options.splitOnGetRegEx ? phrase.split(this.options.splitOnGetRegEx) : [phrase];\n\n    for (var w = 0, l = words.length; w < l; w++)\n    {\n      if (this.options.min && words[w].length < this.options.min)\n        continue;\n\n      var temp = new HashArray(haKeyFields, null, {ignoreDuplicates: true});\n\n      if (node = this.findNode(words[w]))\n        aggregate(node, temp);\n\n      ret = ret ? ret.intersection(temp) : temp;\n    }\n    \n    var v = ret ? ret.all : [];\n\n    if (this.options.cache)\n    {\n      this.getCache.add({key: phrase, value: v});\n      this.cleanCache();\n    }\n\n    return v;\n    \n    function aggregate(node, ha) {\n      if (node.value && node.value.length)\n        ha.addAll(node.value);\n\n      for (var k in node)\n        if (k != 'value')\n          aggregate(node[k], ha);\n    }\n  },\n  get: function (phrases, reducer) {\n    var self = this,\n      haKeyFields = this.options.indexField ? [this.options.indexField] : this.keyFields,\n      ret = undefined,\n      accumulator = undefined;\n\n    if (reducer && !this.options.idFieldOrFunction) {\n      throw new Error('To use the accumulator, you must specify and idFieldOrFunction');\n    }\n\n    phrases = (phrases instanceof Array) ? phrases : [phrases];\n\n    for (var i = 0, l = phrases.length; i < l; i++)\n    {\n      var matches = this._get(phrases[i]);\n\n      if (reducer) {\n        accumulator = reducer(accumulator, phrases[i], matches, this);\n      } else {\n        ret = ret ? ret.addAll(matches) : new HashArray(haKeyFields, null, {ignoreDuplicates: true}).addAll(matches);\n      }\n    }\n\n    if (!reducer) {\n      return ret.all;\n    }\n\n    return accumulator;\n  },\n  getId: function (item) {\n    return typeof this.options.idFieldOrFunction === 'function' ? this.options.idFieldOrFunction(item) : item[this.options.idFieldOrFunction];\n  }\n};\n\nTrieSearch.UNION_REDUCER = function(accumulator, phrase, matches, trie) {\n  if (accumulator === undefined) {\n    return matches;\n  }\n\n  var map = {}, i, id;\n  var maxLength = Math.max(accumulator.length, matches.length);\n  var results = [];\n  var l = 0;\n\n  // One loop, O(N) for max length of accumulator or matches.\n  for (i = 0; i < maxLength; i++) {\n    if (i < accumulator.length) {\n      id = trie.getId(accumulator[i]);\n      map[id] = map[id] ? map[id] : 0;\n      map[id]++;\n\n      if (map[id] === 2) {\n        results[l++] = accumulator[i];\n      }\n    }\n\n    if (i < matches.length) {\n      id = trie.getId(matches[i]);\n      map[id] = map[id] ? map[id] : 0;\n      map[id]++;\n\n      if (map[id] === 2) {\n        results[l++] = matches[i];\n      }\n    }\n  }\n\n  return results;\n};\n\nmodule.exports = TrieSearch;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/trie-search/src/TrieSearch.js\n// module id = 2\n// module chunks = 0","module.exports = require('./src/HashArray.js');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hasharray/index.js\n// module id = 3\n// module chunks = 0","/*===========================================================================*\\\n * Requires\n\\*===========================================================================*/\nvar JClass = require('jclass');\n\n/*===========================================================================*\\\n * HashArray\n\\*===========================================================================*/\nvar HashArray = JClass._extend({\n  //-----------------------------------\n  // Constructor\n  //-----------------------------------\n  init: function(keyFields, callback, options) {\n    keyFields = keyFields instanceof Array ? keyFields : [keyFields];\n\n    this._map = {};\n    this._list = [];\n    this.callback = callback;\n\n    this.keyFields = keyFields;\n\n    this.isHashArray = true;\n    \n    this.options = options || {\n      ignoreDuplicates: false\n    };\n\n    if (callback) {\n      callback('construct');\n    }\n  },\n  //-----------------------------------\n  // add()\n  //-----------------------------------\n  addOne: function (obj) {\n    var needsDupCheck = false;\n    for (var key in this.keyFields) {\n      key = this.keyFields[key];\n      var inst = this.objectAt(obj, key);\n      if (inst) {\n        if (this.has(inst)) {\n          if (this.options.ignoreDuplicates)\n            return;\n          if (this._map[inst].indexOf(obj) != -1) {\n            // Cannot add the same item twice\n            needsDupCheck = true;\n            continue;\n          }\n          this._map[inst].push(obj);\n        }\n        else this._map[inst] = [obj];\n      }\n    }\n\n    if (!needsDupCheck || this._list.indexOf(obj) == -1)\n      this._list.push(obj);\n  },\n  add: function() {\n    for (var i = 0; i < arguments.length; i++) {\n      this.addOne(arguments[i]);\n    }\n\n    if (this.callback) {\n      this.callback('add', Array.prototype.slice.call(arguments, 0));\n    }\n    \n    return this;\n  },\n  addAll: function (arr) {\n    if (arr.length < 100)\n      this.add.apply(this, arr);\n    else {\n      for (var i = 0; i < arr.length; i++)\n        this.add(arr[i]);\n    }\n    \n    return this;\n  },\n  addMap: function(key, obj) {\n    this._map[key] = obj;\n    if (this.callback) {\n      this.callback('addMap', {\n        key: key,\n        obj: obj\n      });\n    }\n    \n    return this;\n  },\n  //-----------------------------------\n  // Intersection, union, etc.\n  //-----------------------------------\n  /**\n   * Returns a new HashArray that contains the intersection between this (A) and the hasharray passed in (B). Returns A ^ B.\n   */\n  intersection: function (other) {\n    var self = this;\n\n    if (!other || !other.isHashArray)\n      throw Error('Cannot HashArray.intersection() on a non-hasharray object. You passed in: ', other);\n\n    var ret = this.clone(null, true),\n      allItems = this.clone(null, true).addAll(this.all.concat(other.all));\n\n    allItems.all.forEach(function (item) {\n      if (self.collides(item) && other.collides(item))\n        ret.add(item);\n    });\n\n    return ret;\n  },\n  /**\n   * Returns a new HashArray that contains the complement (difference) between this hash array (A) and the hasharray passed in (B). Returns A - B.\n   */\n  complement: function (other) {\n    var self = this;\n\n    if (!other || !other.isHashArray)\n      throw Error('Cannot HashArray.complement() on a non-hasharray object. You passed in: ', other);\n\n    var ret = this.clone(null, true);\n\n    this.all.forEach(function (item) {\n      if (!other.collides(item))\n        ret.add(item);\n    });\n\n    return ret;\n  },\n  //-----------------------------------\n  // Retrieval\n  //-----------------------------------\n  get: function(key) {\n    return (!(this._map[key] instanceof Array) || this._map[key].length != 1) ? this._map[key] : this._map[key][0];\n  },\n  getAll: function(keys) {\n    keys = keys instanceof Array ? keys : [keys];\n\n    if (keys[0] == '*')\n      return this.all;\n\n    var res = new HashArray(this.keyFields);\n    for (var key in keys)\n      res.add.apply(res, this.getAsArray(keys[key]));\n\n    return res.all;\n  },\n  getAsArray: function(key) {\n    return this._map[key] || [];\n  },\n  getUniqueRandomIntegers: function (count, min, max) {\n    var res = [], map = {};\n\n    count = Math.min(Math.max(max - min, 1), count);\n    \n    while (res.length < count)\n    {\n      var r = Math.floor(min + (Math.random() * (max + 1)));\n      if (map[r]) continue;\n      map[r] = true;\n      res.push(r);\n    }\n\n    return res;\n  },\n  sample: function (count, keys) {\n    // http://en.wikipedia.org/wiki/Image_(mathematics)\n    var image = this.all,\n      ixs = {},\n      res = [];\n\n    if (keys)\n      image = this.getAll(keys);\n\n    var rand = this.getUniqueRandomIntegers(count, 0, image.length - 1);\n\n    for (var i = 0; i < rand.length; i++)\n      res.push(image[rand[i]]);\n\n    return res;\n  },\n  //-----------------------------------\n  // Peeking\n  //-----------------------------------\n  has: function(key) {\n    return this._map.hasOwnProperty(key);\n  },\n  collides: function (item) {\n    for (var k in this.keyFields)\n      if (this.has(this.objectAt(item, this.keyFields[k])))\n        return true;\n    \n    return false;\n  },\n  hasMultiple: function(key) {\n    return this._map[key] instanceof Array;\n  },\n  //-----------------------------------\n  // Removal\n  //-----------------------------------\n  removeByKey: function() {\n    var removed = [];\n    for (var i = 0; i < arguments.length; i++) {\n      var key = arguments[i];\n      var items = this._map[key].concat();\n      if (items) {\n        removed = removed.concat(items);\n        for (var j in items) {\n          var item = items[j];\n          for (var ix in this.keyFields) {\n            var key2 = this.objectAt(item, this.keyFields[ix]);\n            if (key2 && this.has(key2)) {\n              var ix = this._map[key2].indexOf(item);\n              if (ix != -1) {\n                this._map[key2].splice(ix, 1);\n              }\n\n              if (this._map[key2].length == 0)\n                delete this._map[key2];\n            }\n          }\n\n          this._list.splice(this._list.indexOf(item), 1);\n        }\n      }\n      delete this._map[key];\n    }\n\n    if (this.callback) {\n      this.callback('removeByKey', removed);\n    }\n    \n    return this;\n  },\n  remove: function() {\n    for (var i = 0; i < arguments.length; i++) {\n      var item = arguments[i];\n      for (var ix in this.keyFields) {\n        var key = this.objectAt(item, this.keyFields[ix]);\n        if (key) {\n          var ix = this._map[key].indexOf(item);\n          if (ix != -1)\n            this._map[key].splice(ix, 1);\n          else\n            throw new Error('HashArray: attempting to remove an object that was never added!' + key);\n\n          if (this._map[key].length == 0)\n            delete this._map[key];\n        }\n      }\n\n      var ix = this._list.indexOf(item);\n\n      if (ix != -1)\n        this._list.splice(ix, 1);\n      else\n        throw new Error('HashArray: attempting to remove an object that was never added!' + key);\n    }\n\n    if (this.callback) {\n      this.callback('remove', arguments);\n    }\n    \n    return this;\n  },\n  removeAll: function() {\n    var old = this._list.concat();\n    this._map = {};\n    this._list = [];\n\n    if (this.callback) {\n      this.callback('remove', old);\n    }\n    \n    return this;\n  },\n  //-----------------------------------\n  // Utility\n  //-----------------------------------\n  objectAt: function(obj, path) {\n    if (typeof path === 'string') {\n      return obj[path];\n    }\n\n    var dup = path.concat();\n    // else assume array.\n    while (dup.length && obj) {\n      obj = obj[dup.shift()];\n    }\n\n    return obj;\n  },\n  //-----------------------------------\n  // Iteration\n  //-----------------------------------\n  forEach: function(keys, callback) {\n    keys = keys instanceof Array ? keys : [keys];\n\n    var objs = this.getAll(keys);\n\n    objs.forEach(callback);\n    \n    return this;\n  },\n  forEachDeep: function(keys, key, callback) {\n    keys = keys instanceof Array ? keys : [keys];\n\n    var self = this,\n      objs = this.getAll(keys);\n\n    objs.forEach(function (item) {\n      callback(self.objectAt(item, key), item);\n    });\n    \n    return this;\n  },\n  //-----------------------------------\n  // Cloning\n  //-----------------------------------\n  clone: function(callback, ignoreItems) {\n    var n = new HashArray(this.keyFields.concat(), callback ? callback : this.callback);\n    if (!ignoreItems)\n      n.add.apply(n, this.all.concat());\n    return n;\n  },\n  //-----------------------------------\n  // Mathematical\n  //-----------------------------------\n  sum: function(keys, key, weightKey) {\n    var self = this,\n      ret = 0;\n    this.forEachDeep(keys, key, function (value, item) {\n      if (weightKey !== undefined)\n        value *= self.objectAt(item, weightKey);\n\n      ret += value;\n    });\n    return ret;\n  },\n  average: function(keys, key, weightKey) {\n    var ret = 0,\n      tot = 0,\n      weightsTotal = 0,\n      self = this;\n\n    if (weightKey !== undefined)\n      this.forEachDeep(keys, weightKey, function (value) {\n        weightsTotal += value;\n      })\n\n    this.forEachDeep(keys, key, function (value, item) {\n      if (weightKey !== undefined)\n        value *= (self.objectAt(item, weightKey) / weightsTotal);\n\n      ret += value;\n      tot++;\n    });\n\n    return weightKey !== undefined ? ret : ret / tot;\n  },\n  //-----------------------------------\n  // Filtering\n  //-----------------------------------\n  filter: function (keys, callbackOrKey) {\n    var self = this;\n    \n    var callback = (typeof(callbackOrKey) == 'function') ? callbackOrKey : defaultCallback;\n\n    var ha = new HashArray(this.keyFields);\n    ha.addAll(this.getAll(keys).filter(callback));\n    return ha;\n    \n    function defaultCallback(item) {\n      var val = self.objectAt(item, callbackOrKey);\n      return val !== undefined && val !== false;\n    }\n  }\n});\n\n//-----------------------------------\n// Operators\n//-----------------------------------\nObject.defineProperty(HashArray.prototype, 'all', {\n  get: function () {\n    return this._list;\n  }\n});\n\nObject.defineProperty(HashArray.prototype, 'map', {\n  get: function () {\n    return this._map;\n  }\n});\n\nmodule.exports = HashArray;\n\n//-----------------------------------\n// Browser\n//-----------------------------------\nif (typeof window !== 'undefined')\n  window.HashArray = HashArray;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hasharray/src/HashArray.js\n// module id = 4\n// module chunks = 0","/**\n * jclass v1.1.9\n * https://github.com/riga/jclass\n *\n * Marcel Rieger, 2015\n * MIT licensed, http://www.opensource.org/licenses/mit-license\n */\n\n(function(factory) {\n\n  /**\n   * Make jclass available in any context.\n   */\n\n  if (typeof(define) == \"function\" && define.amd) {\n    // AMD\n    define([], factory);\n\n  } else if (typeof(exports) == \"object\") {\n    // CommonJS\n    exports = factory();\n\n    if (typeof(module) == \"object\") {\n      // NodeJS\n      module.exports = exports;\n    }\n\n  } else if (window) {\n    // Browser\n    window.JClass = factory();\n\n  } else if (typeof(console) == \"object\" && console.error instanceof Function) {\n    // error case\n    console.error(\"cannot determine environment\");\n  }\n\n})(function() {\n\n  /**\n   * Helper functions.\n   */\n\n  /**\n   * Checks whether a passed object is a function.\n   *\n   * @param obj - The object to check.\n   * @returns {boolean}\n   */\n  var isFn = function(obj) {\n    return obj instanceof Function;\n  };\n\n  /**\n   * Extends a target object by one or more source objects with shallow key comparisons. Note that\n   * the extension is done in-place.\n   *\n   * @param {object} target - The target object to extend.\n   * @param {...object} source - Source objects.\n   * @returns {object} The extended object.\n   */\n  var extend = function(target) {\n    var sources = Array.prototype.slice.call(arguments, 1);\n\n    // loop through all sources\n    for (var i in sources) {\n      var source = sources[i];\n\n      // object check\n      if (typeof(source) != \"object\") {\n        continue;\n      }\n\n      // loop through all source attributes\n      for (var key in source) {\n        target[key] = source[key];\n      }\n    }\n\n    return target;\n  };\n\n\n  /**\n   * Default options.\n   */\n\n  var defaultOptions = {\n    // internal object for indicating that class objects don't have a class object themselves,\n    // may not be used by users\n    _isClassObject: false\n  };\n\n\n  /**\n   * Flags.\n   */\n\n  // flag to distinguish between prototype and class instantiation \n  var initializing = false;\n\n\n  /**\n   * Base class definition.\n   */\n\n  // empty BaseClass implementation\n  var BaseClass = function(){};\n\n  // add the _subClasses entry\n  BaseClass._subClasses = [];\n\n  // empty init method\n  BaseClass.prototype.init = function(){};\n\n\n  /**\n   * Extend mechanism. Returns a derived class.\n   *\n   * @param {object} instanceMembers - Members that will be owned by instances.\n   * @param {object} classMembers - Members that will be owned by the class itself.\n   * @returns {JClass}\n   */\n  BaseClass._extend = function(instanceMembers, classMembers, options) {\n\n    // default arguments\n    if (instanceMembers === undefined) {\n      instanceMembers = {};\n    }\n    if (classMembers === undefined) {\n      classMembers = {};\n    }\n    if (options === undefined) {\n      options = {};\n    }\n\n    // mixin default options\n    options = extend({}, defaultOptions, options);\n\n\n    // sub class dummy constructor\n    var JClass = function() {\n      // nothing happens here when we are initializing\n      if (initializing) {\n        return;\n      }\n\n      // store a reference to the class itself\n      this._class = JClass;\n\n      // all construction is actually done in the init method\n      if (this.init instanceof Function) {\n        this.init.apply(this, arguments);\n      }\n    };\n\n\n    // alias for readability\n    var SuperClass = this;\n\n    // create an instance of the super class via new\n    // the flag sandwich prevents a call to the init method\n    initializing = true;\n    var prototype = new SuperClass();\n    initializing = false;\n\n    // get the prototype of the super class\n    var superPrototype = SuperClass.prototype;\n\n    // the instance of the super class is our new prototype\n    JClass.prototype = prototype;\n\n    // enforce the constructor to be what we expect\n    // calls to the constructor will invoke the init method (see above)\n    JClass.prototype.constructor = JClass;\n\n    // store a reference to the super class\n    JClass._superClass = SuperClass;\n\n    // store references to all extending classes\n    JClass._subClasses = [];\n    SuperClass._subClasses.push(JClass);\n\n    // make this class extendable as well\n    JClass._extend = SuperClass._extend;\n\n\n    // _extends returns true if the class itself extended \"target\"\n    // in any hierarchy, e.g. every class extends \"JClass\" itself\n    JClass._extends = function(target) {\n      // this function operates recursive, so stop when the super class is our BaseClass\n      if (this._superClass == BaseClass) {\n        return false;\n      }\n\n      // success case\n      if (target == this._superClass || target == BaseClass) {\n        return true;\n      }\n\n      // continue with the next super class\n      return this._superClass._extends(target);\n    };\n\n\n    // propagate instance members directly to the created protoype,\n    // the member is either a normal member or a descriptor\n    for (var key in instanceMembers) {\n      var property = Object.getOwnPropertyDescriptor(instanceMembers, key);\n      var member   = property.value;\n\n      // descriptor flag set?\n      if (member !== null && typeof(member) == \"object\" && member.descriptor) {\n        Object.defineProperty(prototype, key, member);\n\n      // getter/setter syntax\n      } else if (!(\"value\" in property) && (\"set\" in property || \"get\" in property)) {\n        Object.defineProperty(prototype, key, property);\n\n      // normal member, simple assignment\n      } else {\n        prototype[key] = member;\n\n        // if both member and the super member are distinct functions\n        // add the super member to the member as \"_super\"\n        var superMember = superPrototype[key];\n        if (isFn(member) && isFn(superMember) && member !== superMember) {\n          member._super = superMember;\n        }\n      }\n    }\n\n\n    // propagate class members to the _members object\n    if (!options._isClassObject) {\n      // try to find the super class of the _members object \n      var ClassMembersSuperClass = SuperClass._members === undefined ?\n        BaseClass : SuperClass._members._class;\n\n      // create the actual class of the _members instance\n      // with an updated version of our options\n      var opts = extend({}, options, { _isClassObject: true });\n      var ClassMembersClass = ClassMembersSuperClass._extend(classMembers, {}, opts);\n\n      // store the actual JClass in ClassMembersClass\n      ClassMembersClass._instanceClass = JClass;\n\n      // create the _members instance\n      JClass._members = new ClassMembersClass();\n    }\n\n\n    // return the new class\n    return JClass;\n  };\n\n\n  /**\n   * Converts arbitrary protoype-style classes to our JClass definition.\n   *\n   * @param {function} cls - The class to convert.\n   * @returns {JClass}\n   */\n  BaseClass._convert = function(cls, options) {\n    // the properties consist of the class' prototype\n    var instanceMembers = cls.prototype;\n\n    // add the constructor function\n    instanceMembers.init = function() {\n      // simply create an instance of our target class\n      var origin = this._origin = BaseClass._construct(cls, arguments);\n\n      // add properties for each own property in _origin\n      Object.keys(origin).forEach(function(key) {\n        if (!origin.hasOwnProperty(key)) {\n          return;\n        }\n\n        Object.defineProperty(this, key, {\n          get: function() {\n            return origin[key];\n          }\n        });\n      }, this);\n    };\n\n    // finally, create and return our new class\n    return BaseClass._extend(instanceMembers, {}, options);\n  };\n\n\n  /**\n   * Returns an instance of a class with a list of arguments. This provides an apply-like\n   * constructor usage. Note that this approach does not work with native constructors (e.g. String\n   * or Boolean).\n   *\n   * @param {Class|JClass} cls - The class to instantiate. This may be a JClass or a prototype-based\n   *   class.\n   * @param {array} [args=[]] - Arguments to pass to the constructor.\n   * @returns {instance}\n   */\n  BaseClass._construct = function(cls, args) {\n    // empty default args\n    if (args === undefined) {\n      args = [];\n    }\n\n    // create a class wrapper that calls cls like a function\n    var Class = function() {\n      return cls.apply(this, args);\n    };\n\n    // copy the prototype\n    Class.prototype = cls.prototype;\n\n    // return a new instance\n    return new Class();\n  };\n\n\n  /**\n   * Returns a property descriptor of the super class.\n   *\n   * @param {JClass|instance} cls - A JClass or an instance of a JClass to retrieve the property\n   *   descriptor from.\n   * @param {string} prop - The name of the property descriptor to get.\n   * @returns {object}\n   */\n  BaseClass._superDescriptor = function(cls, prop) {\n    // if cls is an instance, use its class\n    if (\"_class\" in cls && cls instanceof cls._class) {\n      cls = cls._class;\n    }\n\n    // a JClass?\n    if (\"_extends\" in cls && cls._extends instanceof Function && cls._extends(this)) {\n      return Object.getOwnPropertyDescriptor(cls._superClass.prototype, prop);\n    } else {\n      return undefined;\n    }\n  };\n\n\n  /**\n   * Return the BaseClass.\n   */\n\n  return BaseClass;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jclass/index.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}